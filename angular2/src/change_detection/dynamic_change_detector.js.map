{"version":3,"sources":["@traceur/generated/TemplateParser/5","src/change_detection/dynamic_change_detector.js","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/12","@traceur/generated/TemplateParser/11","src/change_detection/@traceur/generated/TemplateParser/8","src/change_detection/@traceur/generated/TemplateParser/7","src/change_detection/@traceur/generated/TemplateParser/26"],"names":[],"mappings":"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","file":"src/change_detection/dynamic_change_detector.js","sourceRoot":"/home/tonyo/projects/quickstart/node_modules/angular2/es6/prod/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {isPresent, isBlank, BaseException, FunctionWrapper} from 'angular2/src/facade/lang';\nimport {List, ListWrapper, MapWrapper, StringMapWrapper} from 'angular2/src/facade/collection';\nimport {ContextWithVariableBindings} from './parser/context_with_variable_bindings';\n\nimport {AbstractChangeDetector} from './abstract_change_detector';\nimport {PipeRegistry} from './pipes/pipe_registry';\nimport {ChangeDetectionUtil, SimpleChange, uninitialized} from './change_detection_util';\n\n\nimport {\n  ProtoRecord,\n  RECORD_TYPE_SELF,\n  RECORD_TYPE_PROPERTY,\n  RECORD_TYPE_INVOKE_METHOD,\n  RECORD_TYPE_CONST,\n  RECORD_TYPE_INVOKE_CLOSURE,\n  RECORD_TYPE_PRIMITIVE_OP,\n  RECORD_TYPE_KEYED_ACCESS,\n  RECORD_TYPE_PIPE,\n  RECORD_TYPE_INTERPOLATE\n  } from './proto_record';\n\nimport {ExpressionChangedAfterItHasBeenChecked, ChangeDetectionError} from './exceptions';\n\nexport class DynamicChangeDetector extends AbstractChangeDetector {\n  dispatcher:any;\n  pipeRegistry;\n\n  values:List;\n  changes:List;\n  pipes:List;\n  prevContexts:List;\n\n  protos:List<ProtoRecord>;\n\n  constructor(dispatcher:any, pipeRegistry:PipeRegistry, protoRecords:List<ProtoRecord>) {\n    super();\n    this.dispatcher = dispatcher;\n    this.pipeRegistry = pipeRegistry;\n\n    this.values = ListWrapper.createFixedSize(protoRecords.length + 1);\n    this.pipes = ListWrapper.createFixedSize(protoRecords.length + 1);\n    this.prevContexts = ListWrapper.createFixedSize(protoRecords.length + 1);\n    this.changes = ListWrapper.createFixedSize(protoRecords.length + 1);\n\n    ListWrapper.fill(this.values, uninitialized);\n    ListWrapper.fill(this.pipes, null);\n    ListWrapper.fill(this.prevContexts, uninitialized);\n    ListWrapper.fill(this.changes, false);\n\n    this.protos = protoRecords;\n  }\n\n  hydrate(context:any) {\n    this.values[0] = context;\n  }\n\n  dehydrate() {\n    this._destroyPipes();\n    ListWrapper.fill(this.values, uninitialized);\n    ListWrapper.fill(this.changes, false);\n    ListWrapper.fill(this.pipes, null);\n    ListWrapper.fill(this.prevContexts, uninitialized);\n  }\n\n  _destroyPipes() {\n    for(var i = 0; i < this.pipes.length; ++i) {\n      if (isPresent(this.pipes[i])) {\n        this.pipes[i].onDestroy();\n      }\n    }\n  }\n\n  hydrated():boolean {\n    return this.values[0] !== uninitialized;\n  }\n\n  detectChangesInRecords(throwOnChange:boolean) {\n    var protos:List<ProtoRecord> = this.protos;\n\n    var updatedRecords = null;\n    for (var i = 0; i < protos.length; ++i) {\n      var proto:ProtoRecord = protos[i];\n      var change = this._check(proto);\n\n      if (isPresent(change)) {\n        var record = ChangeDetectionUtil.changeRecord(proto.bindingMemento, change);\n        updatedRecords = ChangeDetectionUtil.addRecord(updatedRecords, record);\n      }\n\n      if (proto.lastInDirective && isPresent(updatedRecords)) {\n        if (throwOnChange) ChangeDetectionUtil.throwOnChange(proto, updatedRecords[0]);\n\n        this.dispatcher.onRecordChange(proto.directiveMemento, updatedRecords);\n        updatedRecords = null;\n      }\n    }\n  }\n\n  _check(proto:ProtoRecord) {\n    try {\n      if (proto.mode == RECORD_TYPE_PIPE) {\n        return this._pipeCheck(proto);\n      } else {\n        return this._referenceCheck(proto);\n      }\n    } catch (e) {\n      throw new ChangeDetectionError(proto, e);\n    }\n  }\n\n  _referenceCheck(proto:ProtoRecord) {\n    if (this._pureFuncAndArgsDidNotChange(proto)) {\n      this._setChanged(proto, false);\n      return null;\n    }\n\n    var prevValue = this._readSelf(proto);\n    var currValue = this._calculateCurrValue(proto);\n\n    if (!isSame(prevValue, currValue)) {\n      this._writeSelf(proto, currValue);\n      this._setChanged(proto, true);\n\n      if (proto.lastInBinding) {\n        return ChangeDetectionUtil.simpleChange(prevValue, currValue);\n      } else {\n        return null;\n      }\n    } else {\n      this._setChanged(proto, false);\n      return null;\n    }\n  }\n\n  _calculateCurrValue(proto:ProtoRecord) {\n    switch (proto.mode) {\n      case RECORD_TYPE_SELF:\n        return this._readContext(proto);\n\n      case RECORD_TYPE_CONST:\n        return proto.funcOrValue;\n\n      case RECORD_TYPE_PROPERTY:\n        var context = this._readContext(proto);\n        var c = ChangeDetectionUtil.findContext(proto.name, context);\n        if (c instanceof ContextWithVariableBindings) {\n          return c.get(proto.name);\n        } else {\n          var propertyGetter:Function = proto.funcOrValue;\n          return propertyGetter(c);\n        }\n        break;\n\n      case RECORD_TYPE_INVOKE_METHOD:\n        var context = this._readContext(proto);\n        var args = this._readArgs(proto);\n        var c = ChangeDetectionUtil.findContext(proto.name, context);\n        if (c instanceof ContextWithVariableBindings) {\n          return FunctionWrapper.apply(c.get(proto.name), args);\n        } else {\n          var methodInvoker:Function = proto.funcOrValue;\n          return methodInvoker(c, args);\n        }\n        break;\n\n      case RECORD_TYPE_KEYED_ACCESS:\n        var arg = this._readArgs(proto)[0];\n        return this._readContext(proto)[arg];\n\n      case RECORD_TYPE_INVOKE_CLOSURE:\n        return FunctionWrapper.apply(this._readContext(proto), this._readArgs(proto));\n\n      case RECORD_TYPE_INTERPOLATE:\n      case RECORD_TYPE_PRIMITIVE_OP:\n        return FunctionWrapper.apply(proto.funcOrValue, this._readArgs(proto));\n\n      default:\n        throw new BaseException(`Unknown operation ${proto.mode}`);\n    }\n  }\n\n  _pipeCheck(proto:ProtoRecord) {\n    var context = this._readContext(proto);\n    var pipe = this._pipeFor(proto, context);\n\n    var newValue = pipe.transform(context);\n    if (! ChangeDetectionUtil.noChangeMarker(newValue)) {\n      var prevValue = this._readSelf(proto);\n      this._writeSelf(proto, newValue);\n      this._setChanged(proto, true);\n\n      if (proto.lastInBinding) {\n        return ChangeDetectionUtil.simpleChange(prevValue, newValue);\n      } else {\n        return null;\n      }\n    } else {\n      this._setChanged(proto, false);\n      return null;\n    }\n  }\n\n  _pipeFor(proto:ProtoRecord, context) {\n    var storedPipe = this._readPipe(proto);\n    if (isPresent(storedPipe) && storedPipe.supports(context)) {\n      return storedPipe;\n    }\n    if (isPresent(storedPipe)) {\n      storedPipe.onDestroy();\n    }\n    var pipe = this.pipeRegistry.get(proto.name, context);\n    this._writePipe(proto, pipe);\n    return pipe;\n  }\n\n  _readContext(proto:ProtoRecord) {\n    return this.values[proto.contextIndex];\n  }\n\n  _readSelf(proto:ProtoRecord) {\n    return this.values[proto.selfIndex];\n  }\n\n  _writeSelf(proto:ProtoRecord, value) {\n    this.values[proto.selfIndex] = value;\n  }\n\n  _readPipe(proto:ProtoRecord) {\n    return this.pipes[proto.selfIndex];\n  }\n\n  _writePipe(proto:ProtoRecord, value) {\n    this.pipes[proto.selfIndex] = value;\n  }\n\n  _setChanged(proto:ProtoRecord, value:boolean) {\n    this.changes[proto.selfIndex] = value;\n  }\n\n  _pureFuncAndArgsDidNotChange(proto:ProtoRecord):boolean {\n    return proto.isPureFunction() && !this._argsChanged(proto);\n  }\n\n  _argsChanged(proto:ProtoRecord):boolean {\n    var args = proto.args;\n    for(var i = 0; i < args.length; ++i) {\n      if (this.changes[args[i]]) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  _readArgs(proto:ProtoRecord) {\n    var res = ListWrapper.createFixedSize(proto.args.length);\n    var args = proto.args;\n    for (var i = 0; i < args.length; ++i) {\n      res[i] = this.values[args[i]];\n    }\n    return res;\n  }\n}\n\nvar _singleElementList = [null];\n\nfunction isSame(a, b) {\n  if (a === b) return true;\n  if (a instanceof String && b instanceof String && a == b) return true;\n  if ((a !== a) && (b !== b)) return true;\n  return false;\n}\n","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function($__super) {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4, $__super);\n        }($__placeholder__5)","$traceurRuntime.superConstructor($__placeholder__0).call($__placeholder__1)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.type.$__placeholder__0)","assert.genericType($__placeholder__0)"]}