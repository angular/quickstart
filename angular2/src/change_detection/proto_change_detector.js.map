{"version":3,"sources":["proto_change_detector.js"],"names":[],"mappings":"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","file":"src/change_detection/proto_change_detector.js","sourceRoot":"/Users/justin/workspace/angular2_quckstart/quickstart/node_modules/angular2/es6/prod/","sourcesContent":["import {isPresent,\n  isBlank,\n  BaseException,\n  Type,\n  isString} from 'angular2/src/facade/lang';\nimport {List,\n  ListWrapper,\n  MapWrapper,\n  StringMapWrapper} from 'angular2/src/facade/collection';\nimport {AccessMember,\n  Assignment,\n  AST,\n  ASTWithSource,\n  AstVisitor,\n  Binary,\n  Chain,\n  Conditional,\n  Pipe,\n  FunctionCall,\n  ImplicitReceiver,\n  Interpolation,\n  KeyedAccess,\n  LiteralArray,\n  LiteralMap,\n  LiteralPrimitive,\n  MethodCall,\n  PrefixNot} from './parser/ast';\nimport {ChangeRecord,\n  ChangeDispatcher,\n  ChangeDetector} from './interfaces';\nimport {ChangeDetectionUtil} from './change_detection_util';\nimport {DynamicChangeDetector} from './dynamic_change_detector';\nimport {ChangeDetectorJITGenerator} from './change_detection_jit_generator';\nimport {PipeRegistry} from './pipes/pipe_registry';\nimport {coalesce} from './coalesce';\nimport {ProtoRecord,\n  RECORD_TYPE_SELF,\n  RECORD_TYPE_PROPERTY,\n  RECORD_TYPE_LOCAL,\n  RECORD_TYPE_INVOKE_METHOD,\n  RECORD_TYPE_CONST,\n  RECORD_TYPE_INVOKE_CLOSURE,\n  RECORD_TYPE_PRIMITIVE_OP,\n  RECORD_TYPE_KEYED_ACCESS,\n  RECORD_TYPE_PIPE,\n  RECORD_TYPE_BINDING_PIPE,\n  RECORD_TYPE_INTERPOLATE} from './proto_record';\nexport class ProtoChangeDetector {\n  addAst(ast, bindingMemento, directiveMemento = null) {}\n  instantiate(dispatcher, bindingRecords, variableBindings, directiveMemento) {\n    return null;\n  }\n}\nObject.defineProperty(ProtoChangeDetector.prototype.addAst, \"parameters\", {get: function() {\n    return [[AST], [assert.type.any], [assert.type.any]];\n  }});\nObject.defineProperty(ProtoChangeDetector.prototype.instantiate, \"parameters\", {get: function() {\n    return [[assert.type.any], [List], [List], [List]];\n  }});\nexport class BindingRecord {\n  constructor(ast, bindingMemento, directiveMemento) {\n    this.ast = ast;\n    this.bindingMemento = bindingMemento;\n    this.directiveMemento = directiveMemento;\n  }\n}\nObject.defineProperty(BindingRecord, \"parameters\", {get: function() {\n    return [[AST], [assert.type.any], [assert.type.any]];\n  }});\nexport class DynamicProtoChangeDetector extends ProtoChangeDetector {\n  constructor(pipeRegistry) {\n    super();\n    this._pipeRegistry = pipeRegistry;\n  }\n  instantiate(dispatcher, bindingRecords, variableBindings, directiveMementos) {\n    this._createRecordsIfNecessary(bindingRecords, variableBindings);\n    return new DynamicChangeDetector(dispatcher, this._pipeRegistry, this._records, directiveMementos);\n  }\n  _createRecordsIfNecessary(bindingRecords, variableBindings) {\n    if (isBlank(this._records)) {\n      var recordBuilder = new ProtoRecordBuilder();\n      ListWrapper.forEach(bindingRecords, (r) => {\n        recordBuilder.addAst(r.ast, r.bindingMemento, r.directiveMemento, variableBindings);\n      });\n      this._records = coalesce(recordBuilder.records);\n    }\n  }\n}\nObject.defineProperty(DynamicProtoChangeDetector, \"parameters\", {get: function() {\n    return [[PipeRegistry]];\n  }});\nObject.defineProperty(DynamicProtoChangeDetector.prototype.instantiate, \"parameters\", {get: function() {\n    return [[assert.type.any], [List], [List], [List]];\n  }});\nObject.defineProperty(DynamicProtoChangeDetector.prototype._createRecordsIfNecessary, \"parameters\", {get: function() {\n    return [[List], [List]];\n  }});\nvar _jitProtoChangeDetectorClassCounter = 0;\nexport class JitProtoChangeDetector extends ProtoChangeDetector {\n  constructor(pipeRegistry) {\n    super();\n    this._pipeRegistry = pipeRegistry;\n    this._factory = null;\n  }\n  instantiate(dispatcher, bindingRecords, variableBindings, directiveMementos) {\n    this._createFactoryIfNecessary(bindingRecords, variableBindings, directiveMementos);\n    return this._factory(dispatcher, this._pipeRegistry);\n  }\n  _createFactoryIfNecessary(bindingRecords, variableBindings, directiveMementos) {\n    if (isBlank(this._factory)) {\n      var recordBuilder = new ProtoRecordBuilder();\n      ListWrapper.forEach(bindingRecords, (r) => {\n        recordBuilder.addAst(r.ast, r.bindingMemento, r.directiveMemento, variableBindings);\n      });\n      var c = _jitProtoChangeDetectorClassCounter++;\n      var records = coalesce(recordBuilder.records);\n      var typeName = `ChangeDetector${c}`;\n      this._factory = new ChangeDetectorJITGenerator(typeName, records, directiveMementos).generate();\n    }\n  }\n}\nObject.defineProperty(JitProtoChangeDetector.prototype.instantiate, \"parameters\", {get: function() {\n    return [[assert.type.any], [List], [List], [List]];\n  }});\nObject.defineProperty(JitProtoChangeDetector.prototype._createFactoryIfNecessary, \"parameters\", {get: function() {\n    return [[List], [List], [List]];\n  }});\nclass ProtoRecordBuilder {\n  constructor() {\n    this.records = [];\n  }\n  addAst(ast, bindingMemento, directiveMemento = null, variableBindings = null) {\n    var last = ListWrapper.last(this.records);\n    if (isPresent(last) && last.directiveMemento == directiveMemento) {\n      last.lastInDirective = false;\n    }\n    var pr = _ConvertAstIntoProtoRecords.convert(ast, bindingMemento, directiveMemento, this.records.length, variableBindings);\n    if (!ListWrapper.isEmpty(pr)) {\n      var last = ListWrapper.last(pr);\n      last.lastInBinding = true;\n      last.lastInDirective = true;\n      this.records = ListWrapper.concat(this.records, pr);\n    }\n  }\n}\nObject.defineProperty(ProtoRecordBuilder.prototype.addAst, \"parameters\", {get: function() {\n    return [[AST], [assert.type.any], [assert.type.any], [List]];\n  }});\nclass _ConvertAstIntoProtoRecords {\n  constructor(bindingMemento, directiveMemento, contextIndex, expressionAsString, variableBindings) {\n    this.protoRecords = [];\n    this.bindingMemento = bindingMemento;\n    this.directiveMemento = directiveMemento;\n    this.contextIndex = contextIndex;\n    this.expressionAsString = expressionAsString;\n    this.variableBindings = variableBindings;\n  }\n  static convert(ast, bindingMemento, directiveMemento, contextIndex, variableBindings) {\n    var c = new _ConvertAstIntoProtoRecords(bindingMemento, directiveMemento, contextIndex, ast.toString(), variableBindings);\n    ast.visit(c);\n    return c.protoRecords;\n  }\n  visitImplicitReceiver(ast) {\n    return 0;\n  }\n  visitInterpolation(ast) {\n    var args = this._visitAll(ast.expressions);\n    return this._addRecord(RECORD_TYPE_INTERPOLATE, \"interpolate\", _interpolationFn(ast.strings), args, ast.strings, 0);\n  }\n  visitLiteralPrimitive(ast) {\n    return this._addRecord(RECORD_TYPE_CONST, \"literal\", ast.value, [], null, 0);\n  }\n  visitAccessMember(ast) {\n    var receiver = ast.receiver.visit(this);\n    if (isPresent(this.variableBindings) && ListWrapper.contains(this.variableBindings, ast.name)) {\n      return this._addRecord(RECORD_TYPE_LOCAL, ast.name, ast.name, [], null, receiver);\n    } else {\n      return this._addRecord(RECORD_TYPE_PROPERTY, ast.name, ast.getter, [], null, receiver);\n    }\n  }\n  visitMethodCall(ast) {\n    ;\n    var receiver = ast.receiver.visit(this);\n    var args = this._visitAll(ast.args);\n    if (isPresent(this.variableBindings) && ListWrapper.contains(this.variableBindings, ast.name)) {\n      var target = this._addRecord(RECORD_TYPE_LOCAL, ast.name, ast.name, [], null, receiver);\n      return this._addRecord(RECORD_TYPE_INVOKE_CLOSURE, \"closure\", null, args, null, target);\n    } else {\n      return this._addRecord(RECORD_TYPE_INVOKE_METHOD, ast.name, ast.fn, args, null, receiver);\n    }\n  }\n  visitFunctionCall(ast) {\n    var target = ast.target.visit(this);\n    var args = this._visitAll(ast.args);\n    return this._addRecord(RECORD_TYPE_INVOKE_CLOSURE, \"closure\", null, args, null, target);\n  }\n  visitLiteralArray(ast) {\n    var primitiveName = `arrayFn${ast.expressions.length}`;\n    return this._addRecord(RECORD_TYPE_PRIMITIVE_OP, primitiveName, _arrayFn(ast.expressions.length), this._visitAll(ast.expressions), null, 0);\n  }\n  visitLiteralMap(ast) {\n    return this._addRecord(RECORD_TYPE_PRIMITIVE_OP, _mapPrimitiveName(ast.keys), ChangeDetectionUtil.mapFn(ast.keys), this._visitAll(ast.values), null, 0);\n  }\n  visitBinary(ast) {\n    var left = ast.left.visit(this);\n    var right = ast.right.visit(this);\n    return this._addRecord(RECORD_TYPE_PRIMITIVE_OP, _operationToPrimitiveName(ast.operation), _operationToFunction(ast.operation), [left, right], null, 0);\n  }\n  visitPrefixNot(ast) {\n    var exp = ast.expression.visit(this);\n    return this._addRecord(RECORD_TYPE_PRIMITIVE_OP, \"operation_negate\", ChangeDetectionUtil.operation_negate, [exp], null, 0);\n  }\n  visitConditional(ast) {\n    var c = ast.condition.visit(this);\n    var t = ast.trueExp.visit(this);\n    var f = ast.falseExp.visit(this);\n    return this._addRecord(RECORD_TYPE_PRIMITIVE_OP, \"cond\", ChangeDetectionUtil.cond, [c, t, f], null, 0);\n  }\n  visitPipe(ast) {\n    var value = ast.exp.visit(this);\n    var type = ast.inBinding ? RECORD_TYPE_BINDING_PIPE : RECORD_TYPE_PIPE;\n    return this._addRecord(type, ast.name, ast.name, [], null, value);\n  }\n  visitKeyedAccess(ast) {\n    var obj = ast.obj.visit(this);\n    var key = ast.key.visit(this);\n    return this._addRecord(RECORD_TYPE_KEYED_ACCESS, \"keyedAccess\", ChangeDetectionUtil.keyedAccess, [key], null, obj);\n  }\n  _visitAll(asts) {\n    var res = ListWrapper.createFixedSize(asts.length);\n    for (var i = 0; i < asts.length; ++i) {\n      res[i] = asts[i].visit(this);\n    }\n    return res;\n  }\n  _addRecord(type, name, funcOrValue, args, fixedArgs, context) {\n    var selfIndex = ++this.contextIndex;\n    ListWrapper.push(this.protoRecords, new ProtoRecord(type, name, funcOrValue, args, fixedArgs, context, selfIndex, this.bindingMemento, this.directiveMemento, this.expressionAsString, false, false));\n    return selfIndex;\n  }\n}\nObject.defineProperty(_ConvertAstIntoProtoRecords, \"parameters\", {get: function() {\n    return [[assert.type.any], [assert.type.any], [assert.type.number], [assert.type.string], [List]];\n  }});\nObject.defineProperty(_ConvertAstIntoProtoRecords.convert, \"parameters\", {get: function() {\n    return [[AST], [assert.type.any], [assert.type.any], [assert.type.number], [List]];\n  }});\nObject.defineProperty(_ConvertAstIntoProtoRecords.prototype.visitImplicitReceiver, \"parameters\", {get: function() {\n    return [[ImplicitReceiver]];\n  }});\nObject.defineProperty(_ConvertAstIntoProtoRecords.prototype.visitInterpolation, \"parameters\", {get: function() {\n    return [[Interpolation]];\n  }});\nObject.defineProperty(_ConvertAstIntoProtoRecords.prototype.visitLiteralPrimitive, \"parameters\", {get: function() {\n    return [[LiteralPrimitive]];\n  }});\nObject.defineProperty(_ConvertAstIntoProtoRecords.prototype.visitAccessMember, \"parameters\", {get: function() {\n    return [[AccessMember]];\n  }});\nObject.defineProperty(_ConvertAstIntoProtoRecords.prototype.visitMethodCall, \"parameters\", {get: function() {\n    return [[MethodCall]];\n  }});\nObject.defineProperty(_ConvertAstIntoProtoRecords.prototype.visitFunctionCall, \"parameters\", {get: function() {\n    return [[FunctionCall]];\n  }});\nObject.defineProperty(_ConvertAstIntoProtoRecords.prototype.visitLiteralArray, \"parameters\", {get: function() {\n    return [[LiteralArray]];\n  }});\nObject.defineProperty(_ConvertAstIntoProtoRecords.prototype.visitLiteralMap, \"parameters\", {get: function() {\n    return [[LiteralMap]];\n  }});\nObject.defineProperty(_ConvertAstIntoProtoRecords.prototype.visitBinary, \"parameters\", {get: function() {\n    return [[Binary]];\n  }});\nObject.defineProperty(_ConvertAstIntoProtoRecords.prototype.visitPrefixNot, \"parameters\", {get: function() {\n    return [[PrefixNot]];\n  }});\nObject.defineProperty(_ConvertAstIntoProtoRecords.prototype.visitConditional, \"parameters\", {get: function() {\n    return [[Conditional]];\n  }});\nObject.defineProperty(_ConvertAstIntoProtoRecords.prototype.visitPipe, \"parameters\", {get: function() {\n    return [[Pipe]];\n  }});\nObject.defineProperty(_ConvertAstIntoProtoRecords.prototype.visitKeyedAccess, \"parameters\", {get: function() {\n    return [[KeyedAccess]];\n  }});\nObject.defineProperty(_ConvertAstIntoProtoRecords.prototype._visitAll, \"parameters\", {get: function() {\n    return [[List]];\n  }});\nfunction _arrayFn(length) {\n  switch (length) {\n    case 0:\n      return ChangeDetectionUtil.arrayFn0;\n    case 1:\n      return ChangeDetectionUtil.arrayFn1;\n    case 2:\n      return ChangeDetectionUtil.arrayFn2;\n    case 3:\n      return ChangeDetectionUtil.arrayFn3;\n    case 4:\n      return ChangeDetectionUtil.arrayFn4;\n    case 5:\n      return ChangeDetectionUtil.arrayFn5;\n    case 6:\n      return ChangeDetectionUtil.arrayFn6;\n    case 7:\n      return ChangeDetectionUtil.arrayFn7;\n    case 8:\n      return ChangeDetectionUtil.arrayFn8;\n    case 9:\n      return ChangeDetectionUtil.arrayFn9;\n    default:\n      throw new BaseException(`Does not support literal maps with more than 9 elements`);\n  }\n}\nObject.defineProperty(_arrayFn, \"parameters\", {get: function() {\n    return [[assert.type.number]];\n  }});\nfunction _mapPrimitiveName(keys) {\n  var stringifiedKeys = ListWrapper.join(ListWrapper.map(keys, (k) => isString(k) ? `\"${k}\"` : `${k}`), \", \");\n  return `mapFn([${stringifiedKeys}])`;\n}\nObject.defineProperty(_mapPrimitiveName, \"parameters\", {get: function() {\n    return [[List]];\n  }});\nfunction _operationToPrimitiveName(operation) {\n  switch (operation) {\n    case '+':\n      return \"operation_add\";\n    case '-':\n      return \"operation_subtract\";\n    case '*':\n      return \"operation_multiply\";\n    case '/':\n      return \"operation_divide\";\n    case '%':\n      return \"operation_remainder\";\n    case '==':\n      return \"operation_equals\";\n    case '!=':\n      return \"operation_not_equals\";\n    case '<':\n      return \"operation_less_then\";\n    case '>':\n      return \"operation_greater_then\";\n    case '<=':\n      return \"operation_less_or_equals_then\";\n    case '>=':\n      return \"operation_greater_or_equals_then\";\n    case '&&':\n      return \"operation_logical_and\";\n    case '||':\n      return \"operation_logical_or\";\n    default:\n      throw new BaseException(`Unsupported operation ${operation}`);\n  }\n}\nObject.defineProperty(_operationToPrimitiveName, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\nfunction _operationToFunction(operation) {\n  switch (operation) {\n    case '+':\n      return ChangeDetectionUtil.operation_add;\n    case '-':\n      return ChangeDetectionUtil.operation_subtract;\n    case '*':\n      return ChangeDetectionUtil.operation_multiply;\n    case '/':\n      return ChangeDetectionUtil.operation_divide;\n    case '%':\n      return ChangeDetectionUtil.operation_remainder;\n    case '==':\n      return ChangeDetectionUtil.operation_equals;\n    case '!=':\n      return ChangeDetectionUtil.operation_not_equals;\n    case '<':\n      return ChangeDetectionUtil.operation_less_then;\n    case '>':\n      return ChangeDetectionUtil.operation_greater_then;\n    case '<=':\n      return ChangeDetectionUtil.operation_less_or_equals_then;\n    case '>=':\n      return ChangeDetectionUtil.operation_greater_or_equals_then;\n    case '&&':\n      return ChangeDetectionUtil.operation_logical_and;\n    case '||':\n      return ChangeDetectionUtil.operation_logical_or;\n    default:\n      throw new BaseException(`Unsupported operation ${operation}`);\n  }\n}\nObject.defineProperty(_operationToFunction, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\nfunction s(v) {\n  return isPresent(v) ? `${v}` : '';\n}\nfunction _interpolationFn(strings) {\n  var length = strings.length;\n  var c0 = length > 0 ? strings[0] : null;\n  var c1 = length > 1 ? strings[1] : null;\n  var c2 = length > 2 ? strings[2] : null;\n  var c3 = length > 3 ? strings[3] : null;\n  var c4 = length > 4 ? strings[4] : null;\n  var c5 = length > 5 ? strings[5] : null;\n  var c6 = length > 6 ? strings[6] : null;\n  var c7 = length > 7 ? strings[7] : null;\n  var c8 = length > 8 ? strings[8] : null;\n  var c9 = length > 9 ? strings[9] : null;\n  switch (length - 1) {\n    case 1:\n      return (a1) => c0 + s(a1) + c1;\n    case 2:\n      return (a1, a2) => c0 + s(a1) + c1 + s(a2) + c2;\n    case 3:\n      return (a1, a2, a3) => c0 + s(a1) + c1 + s(a2) + c2 + s(a3) + c3;\n    case 4:\n      return (a1, a2, a3, a4) => c0 + s(a1) + c1 + s(a2) + c2 + s(a3) + c3 + s(a4) + c4;\n    case 5:\n      return (a1, a2, a3, a4, a5) => c0 + s(a1) + c1 + s(a2) + c2 + s(a3) + c3 + s(a4) + c4 + s(a5) + c5;\n    case 6:\n      return (a1, a2, a3, a4, a5, a6) => c0 + s(a1) + c1 + s(a2) + c2 + s(a3) + c3 + s(a4) + c4 + s(a5) + c5 + s(a6) + c6;\n    case 7:\n      return (a1, a2, a3, a4, a5, a6, a7) => c0 + s(a1) + c1 + s(a2) + c2 + s(a3) + c3 + s(a4) + c4 + s(a5) + c5 + s(a6) + c6 + s(a7) + c7;\n    case 8:\n      return (a1, a2, a3, a4, a5, a6, a7, a8) => c0 + s(a1) + c1 + s(a2) + c2 + s(a3) + c3 + s(a4) + c4 + s(a5) + c5 + s(a6) + c6 + s(a7) + c7 + s(a8) + c8;\n    case 9:\n      return (a1, a2, a3, a4, a5, a6, a7, a8, a9) => c0 + s(a1) + c1 + s(a2) + c2 + s(a3) + c3 + s(a4) + c4 + s(a5) + c5 + s(a6) + c6 + s(a7) + c7 + s(a8) + c8 + s(a9) + c9;\n    default:\n      throw new BaseException(`Does not support more than 9 expressions`);\n  }\n}\nObject.defineProperty(_interpolationFn, \"parameters\", {get: function() {\n    return [[List]];\n  }});\n//# sourceMappingURL=proto_change_detector.js.map\n\n//# sourceMappingURL=./proto_change_detector.map"]}