{"version":3,"sources":["iterable_changes.js"],"names":[],"mappings":"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","file":"src/change_detection/pipes/iterable_changes.js","sourceRoot":"/Users/justin/workspace/angular2_quckstart/quickstart/node_modules/angular2/es6/prod/","sourcesContent":["import {isListLikeIterable,\n  iterateListLike,\n  ListWrapper,\n  MapWrapper} from 'angular2/src/facade/collection';\nimport {int,\n  isBlank,\n  isPresent,\n  stringify,\n  getMapKey,\n  looseIdentical} from 'angular2/src/facade/lang';\nimport {NO_CHANGE,\n  Pipe} from './pipe';\nexport class IterableChangesFactory {\n  supports(obj) {\n    return IterableChanges.supportsObj(obj);\n  }\n  create(bpc) {\n    return new IterableChanges();\n  }\n}\nexport class IterableChanges extends Pipe {\n  constructor() {\n    super();\n    this._collection = null;\n    this._length = null;\n    this._linkedRecords = null;\n    this._unlinkedRecords = null;\n    this._previousItHead = null;\n    this._itHead = null;\n    this._itTail = null;\n    this._additionsHead = null;\n    this._additionsTail = null;\n    this._movesHead = null;\n    this._movesTail = null;\n    this._removalsHead = null;\n    this._removalsTail = null;\n  }\n  static supportsObj(obj) {\n    return isListLikeIterable(obj);\n  }\n  supports(obj) {\n    return IterableChanges.supportsObj(obj);\n  }\n  get collection() {\n    return this._collection;\n  }\n  get length() {\n    return this._length;\n  }\n  forEachItem(fn) {\n    var record;\n    for (record = this._itHead; record !== null; record = record._next) {\n      fn(record);\n    }\n  }\n  forEachPreviousItem(fn) {\n    var record;\n    for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n      fn(record);\n    }\n  }\n  forEachAddedItem(fn) {\n    var record;\n    for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n      fn(record);\n    }\n  }\n  forEachMovedItem(fn) {\n    var record;\n    for (record = this._movesHead; record !== null; record = record._nextMoved) {\n      fn(record);\n    }\n  }\n  forEachRemovedItem(fn) {\n    var record;\n    for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n      fn(record);\n    }\n  }\n  transform(collection) {\n    if (this.check(collection)) {\n      return this;\n    } else {\n      return NO_CHANGE;\n    }\n  }\n  check(collection) {\n    this._reset();\n    var record = this._itHead;\n    var mayBeDirty = false;\n    var index;\n    var item;\n    if (ListWrapper.isList(collection)) {\n      var list = collection;\n      this._length = collection.length;\n      for (index = 0; index < this._length; index++) {\n        item = list[index];\n        if (record === null || !looseIdentical(record.item, item)) {\n          record = this._mismatch(record, item, index);\n          mayBeDirty = true;\n        } else if (mayBeDirty) {\n          record = this._verifyReinsertion(record, item, index);\n        }\n        record = record._next;\n      }\n    } else {\n      index = 0;\n      iterateListLike(collection, (item) => {\n        if (record === null || !looseIdentical(record.item, item)) {\n          record = this._mismatch(record, item, index);\n          mayBeDirty = true;\n        } else if (mayBeDirty) {\n          record = this._verifyReinsertion(record, item, index);\n        }\n        record = record._next;\n        index++;\n      });\n      this._length = index;\n    }\n    this._truncate(record);\n    this._collection = collection;\n    return this.isDirty;\n  }\n  get isDirty() {\n    return this._additionsHead !== null || this._movesHead !== null || this._removalsHead !== null;\n  }\n  _reset() {\n    if (this.isDirty) {\n      var record;\n      var nextRecord;\n      for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n        record._nextPrevious = record._next;\n      }\n      for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n        record.previousIndex = record.currentIndex;\n      }\n      this._additionsHead = this._additionsTail = null;\n      for (record = this._movesHead; record !== null; record = nextRecord) {\n        record.previousIndex = record.currentIndex;\n        nextRecord = record._nextMoved;\n      }\n      this._movesHead = this._movesTail = null;\n      this._removalsHead = this._removalsTail = null;\n    }\n  }\n  _mismatch(record, item, index) {\n    var previousRecord;\n    if (record === null) {\n      previousRecord = this._itTail;\n    } else {\n      previousRecord = record._prev;\n      this._remove(record);\n    }\n    record = this._linkedRecords === null ? null : this._linkedRecords.get(item, index);\n    if (record !== null) {\n      this._moveAfter(record, previousRecord, index);\n    } else {\n      record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(item);\n      if (record !== null) {\n        this._reinsertAfter(record, previousRecord, index);\n      } else {\n        record = this._addAfter(new CollectionChangeRecord(item), previousRecord, index);\n      }\n    }\n    return record;\n  }\n  _verifyReinsertion(record, item, index) {\n    var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(item);\n    if (reinsertRecord !== null) {\n      record = this._reinsertAfter(reinsertRecord, record._prev, index);\n    } else if (record.currentIndex != index) {\n      record.currentIndex = index;\n      this._addToMoves(record, index);\n    }\n    return record;\n  }\n  _truncate(record) {\n    while (record !== null) {\n      var nextRecord = record._next;\n      this._addToRemovals(this._unlink(record));\n      record = nextRecord;\n    }\n    if (this._unlinkedRecords !== null) {\n      this._unlinkedRecords.clear();\n    }\n    if (this._additionsTail !== null) {\n      this._additionsTail._nextAdded = null;\n    }\n    if (this._movesTail !== null) {\n      this._movesTail._nextMoved = null;\n    }\n    if (this._itTail !== null) {\n      this._itTail._next = null;\n    }\n    if (this._removalsTail !== null) {\n      this._removalsTail._nextRemoved = null;\n    }\n  }\n  _reinsertAfter(record, prevRecord, index) {\n    if (this._unlinkedRecords !== null) {\n      this._unlinkedRecords.remove(record);\n    }\n    var prev = record._prevRemoved;\n    var next = record._nextRemoved;\n    if (prev === null) {\n      this._removalsHead = next;\n    } else {\n      prev._nextRemoved = next;\n    }\n    if (next === null) {\n      this._removalsTail = prev;\n    } else {\n      next._prevRemoved = prev;\n    }\n    this._insertAfter(record, prevRecord, index);\n    this._addToMoves(record, index);\n    return record;\n  }\n  _moveAfter(record, prevRecord, index) {\n    this._unlink(record);\n    this._insertAfter(record, prevRecord, index);\n    this._addToMoves(record, index);\n    return record;\n  }\n  _addAfter(record, prevRecord, index) {\n    this._insertAfter(record, prevRecord, index);\n    if (this._additionsTail === null) {\n      this._additionsTail = this._additionsHead = record;\n    } else {\n      this._additionsTail = this._additionsTail._nextAdded = record;\n    }\n    return record;\n  }\n  _insertAfter(record, prevRecord, index) {\n    var next = prevRecord === null ? this._itHead : prevRecord._next;\n    record._next = next;\n    record._prev = prevRecord;\n    if (next === null) {\n      this._itTail = record;\n    } else {\n      next._prev = record;\n    }\n    if (prevRecord === null) {\n      this._itHead = record;\n    } else {\n      prevRecord._next = record;\n    }\n    if (this._linkedRecords === null) {\n      this._linkedRecords = new _DuplicateMap();\n    }\n    this._linkedRecords.put(record);\n    record.currentIndex = index;\n    return record;\n  }\n  _remove(record) {\n    return this._addToRemovals(this._unlink(record));\n  }\n  _unlink(record) {\n    if (this._linkedRecords !== null) {\n      this._linkedRecords.remove(record);\n    }\n    var prev = record._prev;\n    var next = record._next;\n    if (prev === null) {\n      this._itHead = next;\n    } else {\n      prev._next = next;\n    }\n    if (next === null) {\n      this._itTail = prev;\n    } else {\n      next._prev = prev;\n    }\n    return record;\n  }\n  _addToMoves(record, toIndex) {\n    if (record.previousIndex === toIndex) {\n      return record;\n    }\n    if (this._movesTail === null) {\n      this._movesTail = this._movesHead = record;\n    } else {\n      this._movesTail = this._movesTail._nextMoved = record;\n    }\n    return record;\n  }\n  _addToRemovals(record) {\n    if (this._unlinkedRecords === null) {\n      this._unlinkedRecords = new _DuplicateMap();\n    }\n    this._unlinkedRecords.put(record);\n    record.currentIndex = null;\n    record._nextRemoved = null;\n    if (this._removalsTail === null) {\n      this._removalsTail = this._removalsHead = record;\n      record._prevRemoved = null;\n    } else {\n      record._prevRemoved = this._removalsTail;\n      this._removalsTail = this._removalsTail._nextRemoved = record;\n    }\n    return record;\n  }\n  toString() {\n    var record;\n    var list = [];\n    for (record = this._itHead; record !== null; record = record._next) {\n      ListWrapper.push(list, record);\n    }\n    var previous = [];\n    for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n      ListWrapper.push(previous, record);\n    }\n    var additions = [];\n    for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n      ListWrapper.push(additions, record);\n    }\n    var moves = [];\n    for (record = this._movesHead; record !== null; record = record._nextMoved) {\n      ListWrapper.push(moves, record);\n    }\n    var removals = [];\n    for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n      ListWrapper.push(removals, record);\n    }\n    return \"collection: \" + list.join(', ') + \"\\n\" + \"previous: \" + previous.join(', ') + \"\\n\" + \"additions: \" + additions.join(', ') + \"\\n\" + \"moves: \" + moves.join(', ') + \"\\n\" + \"removals: \" + removals.join(', ') + \"\\n\";\n  }\n}\nObject.defineProperty(IterableChanges.prototype.forEachItem, \"parameters\", {get: function() {\n    return [[Function]];\n  }});\nObject.defineProperty(IterableChanges.prototype.forEachPreviousItem, \"parameters\", {get: function() {\n    return [[Function]];\n  }});\nObject.defineProperty(IterableChanges.prototype.forEachAddedItem, \"parameters\", {get: function() {\n    return [[Function]];\n  }});\nObject.defineProperty(IterableChanges.prototype.forEachMovedItem, \"parameters\", {get: function() {\n    return [[Function]];\n  }});\nObject.defineProperty(IterableChanges.prototype.forEachRemovedItem, \"parameters\", {get: function() {\n    return [[Function]];\n  }});\nObject.defineProperty(IterableChanges.prototype._mismatch, \"parameters\", {get: function() {\n    return [[CollectionChangeRecord], [], [int]];\n  }});\nObject.defineProperty(IterableChanges.prototype._verifyReinsertion, \"parameters\", {get: function() {\n    return [[CollectionChangeRecord], [], [int]];\n  }});\nObject.defineProperty(IterableChanges.prototype._truncate, \"parameters\", {get: function() {\n    return [[CollectionChangeRecord]];\n  }});\nObject.defineProperty(IterableChanges.prototype._reinsertAfter, \"parameters\", {get: function() {\n    return [[CollectionChangeRecord], [CollectionChangeRecord], [int]];\n  }});\nObject.defineProperty(IterableChanges.prototype._moveAfter, \"parameters\", {get: function() {\n    return [[CollectionChangeRecord], [CollectionChangeRecord], [int]];\n  }});\nObject.defineProperty(IterableChanges.prototype._addAfter, \"parameters\", {get: function() {\n    return [[CollectionChangeRecord], [CollectionChangeRecord], [int]];\n  }});\nObject.defineProperty(IterableChanges.prototype._insertAfter, \"parameters\", {get: function() {\n    return [[CollectionChangeRecord], [CollectionChangeRecord], [int]];\n  }});\nObject.defineProperty(IterableChanges.prototype._remove, \"parameters\", {get: function() {\n    return [[CollectionChangeRecord]];\n  }});\nObject.defineProperty(IterableChanges.prototype._unlink, \"parameters\", {get: function() {\n    return [[CollectionChangeRecord]];\n  }});\nObject.defineProperty(IterableChanges.prototype._addToMoves, \"parameters\", {get: function() {\n    return [[CollectionChangeRecord], [int]];\n  }});\nObject.defineProperty(IterableChanges.prototype._addToRemovals, \"parameters\", {get: function() {\n    return [[CollectionChangeRecord]];\n  }});\nexport class CollectionChangeRecord {\n  constructor(item) {\n    this.currentIndex = null;\n    this.previousIndex = null;\n    this.item = item;\n    this._nextPrevious = null;\n    this._prev = null;\n    this._next = null;\n    this._prevDup = null;\n    this._nextDup = null;\n    this._prevRemoved = null;\n    this._nextRemoved = null;\n    this._nextAdded = null;\n    this._nextMoved = null;\n  }\n  toString() {\n    return this.previousIndex === this.currentIndex ? stringify(this.item) : stringify(this.item) + '[' + stringify(this.previousIndex) + '->' + stringify(this.currentIndex) + ']';\n  }\n}\nclass _DuplicateItemRecordList {\n  constructor() {\n    this._head = null;\n    this._tail = null;\n  }\n  add(record) {\n    if (this._head === null) {\n      this._head = this._tail = record;\n      record._nextDup = null;\n      record._prevDup = null;\n    } else {\n      this._tail._nextDup = record;\n      record._prevDup = this._tail;\n      record._nextDup = null;\n      this._tail = record;\n    }\n  }\n  get(item, afterIndex) {\n    var record;\n    for (record = this._head; record !== null; record = record._nextDup) {\n      if ((afterIndex === null || afterIndex < record.currentIndex) && looseIdentical(record.item, item)) {\n        return record;\n      }\n    }\n    return null;\n  }\n  remove(record) {\n    var prev = record._prevDup;\n    var next = record._nextDup;\n    if (prev === null) {\n      this._head = next;\n    } else {\n      prev._nextDup = next;\n    }\n    if (next === null) {\n      this._tail = prev;\n    } else {\n      next._prevDup = prev;\n    }\n    return this._head === null;\n  }\n}\nObject.defineProperty(_DuplicateItemRecordList.prototype.add, \"parameters\", {get: function() {\n    return [[CollectionChangeRecord]];\n  }});\nObject.defineProperty(_DuplicateItemRecordList.prototype.get, \"parameters\", {get: function() {\n    return [[], [int]];\n  }});\nObject.defineProperty(_DuplicateItemRecordList.prototype.remove, \"parameters\", {get: function() {\n    return [[CollectionChangeRecord]];\n  }});\nclass _DuplicateMap {\n  constructor() {\n    this.map = MapWrapper.create();\n  }\n  put(record) {\n    var key = getMapKey(record.item);\n    var duplicates = MapWrapper.get(this.map, key);\n    if (!isPresent(duplicates)) {\n      duplicates = new _DuplicateItemRecordList();\n      MapWrapper.set(this.map, key, duplicates);\n    }\n    duplicates.add(record);\n  }\n  get(value, afterIndex = null) {\n    var key = getMapKey(value);\n    var recordList = MapWrapper.get(this.map, key);\n    return isBlank(recordList) ? null : recordList.get(value, afterIndex);\n  }\n  remove(record) {\n    var key = getMapKey(record.item);\n    var recordList = MapWrapper.get(this.map, key);\n    if (recordList.remove(record)) {\n      MapWrapper.delete(this.map, key);\n    }\n    return record;\n  }\n  get isEmpty() {\n    return MapWrapper.size(this.map) === 0;\n  }\n  clear() {\n    MapWrapper.clear(this.map);\n  }\n  toString() {\n    return '_DuplicateMap(' + stringify(this.map) + ')';\n  }\n}\nObject.defineProperty(_DuplicateMap.prototype.put, \"parameters\", {get: function() {\n    return [[CollectionChangeRecord]];\n  }});\nObject.defineProperty(_DuplicateMap.prototype.remove, \"parameters\", {get: function() {\n    return [[CollectionChangeRecord]];\n  }});\n//# sourceMappingURL=iterable_changes.js.map\n\n//# sourceMappingURL=./iterable_changes.map"]}