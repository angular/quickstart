{"version":3,"sources":["pipe_registry.js"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,2GAAoB,UAAS,SAAQ;;;;;;;;;;;AAApD,OAAO;AACD,UAAM,GADZ,SAAS,IAAG;AAAZ,WAAoB,KAAG,KAAkB,CAAC;AAA1C,kBAAoB,KAAG,YAAkB,CAAC;IAElC,CAFR,UAAS,IAAG;AAAZ,cAAoB,KAAG,QAAkB,CAAC;AAA1C,gBAAoB,KAAG,UAAkB,CAAC;AAA1C,oBAAoB,KAAG,cAAkB,CAAC;AAA1C,YAAoB,KAAG,MAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,WAAoB,KAAG,KAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,+BAAoB,KAAG,yBAAkB,CAAC;IAElC,CADuB;AACzB,UAAM;mBAFY,CAAA,SAAQ,AAAC,kBAAjC,SAAQ,AAAC;AACC,AAAI,UAAA,eAOP,SAAM,aAAW,CACV,MAAK,CAAG;AAClB,aAAG,OAAO,EAAI,OAAK,CAAC;QAT0B,AAUhD,CAViD;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,gBAU5C,GAAE,CAAF,UAAI,IAAG,CAAG,CAAA,GAAE,CAAG,CAAA,GAAE;AACf,AAAI,cAAA,CAAA,aAAY,EAAI,CAAA,IAAG,OAAO,CAAE,IAAG,CAAC,CAAC;AACrC,eAAI,OAAM,AAAC,CAAC,aAAY,CAAC,CAAG;AAC1B,kBAAM,IAAI,cAAY,AAAC,EAAC,+BAA+B,EAAC,KAAG,EAAC,aAAY,EAAC,IAAE,EAAC,IAAE,EAAC,CAAC;YAClF;AAAA,AACI,cAAA,CAAA,cAAa,EAAI,CAAA,WAAU,KAAK,AAAC,CAAC,aAAY,GAAG,SAAC,UAAS;mBAAM,CAAA,UAAS,SAAS,AAAC,CAAC,GAAE,CAAC;YAAA,EAAC,CAAC;AAC9F,eAAI,OAAM,AAAC,CAAC,cAAa,CAAC,CAAG;AAC3B,kBAAM,IAAI,cAAY,AAAC,EAAC,+BAA+B,EAAC,KAAG,EAAC,aAAY,EAAC,IAAE,EAAC,IAAE,EAAC,CAAC;YAClF;AAAA,AACA,iBAAO,CAAA,cAAa,OAAO,AAAC,CAAC,GAAE,CAAC,CAAC;UACnC,MAnB8D,CAAC;MACzD,AAAC,EAAC,EAJ4D;AAwBtE,WAAK,eAAe,AAAC,CAAC,YAAW,UAAU,IAAI,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AAC7E,eAAO,EAAC,CAAC,MAAK,KAAK,OAAO,CAAC,CAAG,GAAC,CAAG,EAAC,wBAAuB,CAAC,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;IAxB0B;EAC3B,CAAA;AADI,CAAC,CAAC;AA2B6B","file":"src/change_detection/pipes/pipe_registry.js","sourceRoot":"/Users/justin/workspace/angular2_quckstart/quickstart/node_modules/angular2/es6/prod/","sourcesContent":["import {List,\n  ListWrapper} from 'angular2/src/facade/collection';\nimport {isBlank,\n  isPresent,\n  BaseException,\n  CONST} from 'angular2/src/facade/lang';\nimport {Pipe} from './pipe';\nimport {BindingPropagationConfig} from '../binding_propagation_config';\nexport class PipeRegistry {\n  constructor(config) {\n    this.config = config;\n  }\n  get(type, obj, bpc) {\n    var listOfConfigs = this.config[type];\n    if (isBlank(listOfConfigs)) {\n      throw new BaseException(`Cannot find a pipe for type '${type}' object '${obj}'`);\n    }\n    var matchingConfig = ListWrapper.find(listOfConfigs, (pipeConfig) => pipeConfig.supports(obj));\n    if (isBlank(matchingConfig)) {\n      throw new BaseException(`Cannot find a pipe for type '${type}' object '${obj}'`);\n    }\n    return matchingConfig.create(bpc);\n  }\n}\nObject.defineProperty(PipeRegistry.prototype.get, \"parameters\", {get: function() {\n    return [[assert.type.string], [], [BindingPropagationConfig]];\n  }});\n//# sourceMappingURL=pipe_registry.js.map\n\n//# sourceMappingURL=./pipe_registry.map"]}