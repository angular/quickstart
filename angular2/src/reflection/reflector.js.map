{"version":3,"sources":["reflector.js"],"names":[],"mappings":"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","file":"src/reflection/reflector.js","sourceRoot":"/Users/justin/workspace/angular2_quckstart/quickstart/node_modules/angular2/es6/prod/","sourcesContent":["import {Type,\n  isPresent,\n  stringify,\n  BaseException} from 'angular2/src/facade/lang';\nimport {List,\n  ListWrapper,\n  Map,\n  MapWrapper,\n  StringMapWrapper} from 'angular2/src/facade/collection';\nimport {SetterFn,\n  GetterFn,\n  MethodFn} from './types';\nexport {SetterFn, GetterFn, MethodFn} from './types';\nexport class Reflector {\n  constructor(reflectionCapabilities) {\n    this._typeInfo = MapWrapper.create();\n    this._getters = MapWrapper.create();\n    this._setters = MapWrapper.create();\n    this._methods = MapWrapper.create();\n    this.reflectionCapabilities = reflectionCapabilities;\n  }\n  registerType(type, typeInfo) {\n    MapWrapper.set(this._typeInfo, type, typeInfo);\n  }\n  registerGetters(getters) {\n    _mergeMaps(this._getters, getters);\n  }\n  registerSetters(setters) {\n    _mergeMaps(this._setters, setters);\n  }\n  registerMethods(methods) {\n    _mergeMaps(this._methods, methods);\n  }\n  factory(type) {\n    if (MapWrapper.contains(this._typeInfo, type)) {\n      return MapWrapper.get(this._typeInfo, type)[\"factory\"];\n    } else {\n      return this.reflectionCapabilities.factory(type);\n    }\n  }\n  parameters(typeOfFunc) {\n    if (MapWrapper.contains(this._typeInfo, typeOfFunc)) {\n      return MapWrapper.get(this._typeInfo, typeOfFunc)[\"parameters\"];\n    } else {\n      return this.reflectionCapabilities.parameters(typeOfFunc);\n    }\n  }\n  annotations(typeOfFunc) {\n    if (MapWrapper.contains(this._typeInfo, typeOfFunc)) {\n      return MapWrapper.get(this._typeInfo, typeOfFunc)[\"annotations\"];\n    } else {\n      return this.reflectionCapabilities.annotations(typeOfFunc);\n    }\n  }\n  getter(name) {\n    if (MapWrapper.contains(this._getters, name)) {\n      return MapWrapper.get(this._getters, name);\n    } else {\n      return this.reflectionCapabilities.getter(name);\n    }\n  }\n  setter(name) {\n    if (MapWrapper.contains(this._setters, name)) {\n      return MapWrapper.get(this._setters, name);\n    } else {\n      return this.reflectionCapabilities.setter(name);\n    }\n  }\n  method(name) {\n    if (MapWrapper.contains(this._methods, name)) {\n      return MapWrapper.get(this._methods, name);\n    } else {\n      return this.reflectionCapabilities.method(name);\n    }\n  }\n}\nObject.defineProperty(Reflector.prototype.factory, \"parameters\", {get: function() {\n    return [[Type]];\n  }});\nObject.defineProperty(Reflector.prototype.getter, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\nObject.defineProperty(Reflector.prototype.setter, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\nObject.defineProperty(Reflector.prototype.method, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\nfunction _mergeMaps(target, config) {\n  StringMapWrapper.forEach(config, (v, k) => MapWrapper.set(target, k, v));\n}\nObject.defineProperty(_mergeMaps, \"parameters\", {get: function() {\n    return [[Map], []];\n  }});\n//# sourceMappingURL=reflector.js.map\n\n//# sourceMappingURL=./reflector.map"]}