{"version":3,"sources":["property_setter_factory.js"],"names":[],"mappings":"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","file":"src/core/compiler/property_setter_factory.js","sourceRoot":"/Users/justin/workspace/angular2_quckstart/quickstart/node_modules/angular2/es6/prod/","sourcesContent":["import {StringWrapper,\n  RegExpWrapper,\n  BaseException,\n  isPresent,\n  isBlank,\n  isString,\n  stringify} from 'angular2/src/facade/lang';\nimport {ListWrapper,\n  StringMapWrapper} from 'angular2/src/facade/collection';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\nimport {camelCaseToDashCase,\n  dashCaseToCamelCase} from './string_utils';\nimport {reflector} from 'angular2/src/reflection/reflection';\nconst STYLE_SEPARATOR = '.';\nvar propertySettersCache = StringMapWrapper.create();\nvar innerHTMLSetterCache;\nexport function setterFactory(property) {\n  var setterFn,\n      styleParts,\n      styleSuffix;\n  if (StringWrapper.startsWith(property, ATTRIBUTE_PREFIX)) {\n    setterFn = attributeSetterFactory(StringWrapper.substring(property, ATTRIBUTE_PREFIX.length));\n  } else if (StringWrapper.startsWith(property, CLASS_PREFIX)) {\n    setterFn = classSetterFactory(StringWrapper.substring(property, CLASS_PREFIX.length));\n  } else if (StringWrapper.startsWith(property, STYLE_PREFIX)) {\n    styleParts = property.split(STYLE_SEPARATOR);\n    styleSuffix = styleParts.length > 2 ? ListWrapper.get(styleParts, 2) : '';\n    setterFn = styleSetterFactory(ListWrapper.get(styleParts, 1), styleSuffix);\n  } else if (StringWrapper.equals(property, 'innerHtml')) {\n    if (isBlank(innerHTMLSetterCache)) {\n      innerHTMLSetterCache = (el, value) => DOM.setInnerHTML(el, value);\n    }\n    setterFn = innerHTMLSetterCache;\n  } else {\n    property = resolvePropertyName(property);\n    setterFn = StringMapWrapper.get(propertySettersCache, property);\n    if (isBlank(setterFn)) {\n      var propertySetterFn = reflector.setter(property);\n      setterFn = function(receiver, value) {\n        if (DOM.hasProperty(receiver, property)) {\n          return propertySetterFn(receiver, value);\n        }\n      };\n      StringMapWrapper.set(propertySettersCache, property, setterFn);\n    }\n  }\n  return setterFn;\n}\nObject.defineProperty(setterFactory, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\nconst ATTRIBUTE_PREFIX = 'attr.';\nvar attributeSettersCache = StringMapWrapper.create();\nfunction _isValidAttributeValue(attrName, value) {\n  if (attrName == \"role\") {\n    return isString(value);\n  } else {\n    return isPresent(value);\n  }\n}\nObject.defineProperty(_isValidAttributeValue, \"parameters\", {get: function() {\n    return [[assert.type.string], [assert.type.any]];\n  }});\nfunction attributeSetterFactory(attrName) {\n  var setterFn = StringMapWrapper.get(attributeSettersCache, attrName);\n  var dashCasedAttributeName;\n  if (isBlank(setterFn)) {\n    dashCasedAttributeName = camelCaseToDashCase(attrName);\n    setterFn = function(element, value) {\n      if (_isValidAttributeValue(dashCasedAttributeName, value)) {\n        DOM.setAttribute(element, dashCasedAttributeName, stringify(value));\n      } else {\n        if (isPresent(value)) {\n          throw new BaseException(\"Invalid \" + dashCasedAttributeName + \" attribute, only string values are allowed, got '\" + stringify(value) + \"'\");\n        }\n        DOM.removeAttribute(element, dashCasedAttributeName);\n      }\n    };\n    StringMapWrapper.set(attributeSettersCache, attrName, setterFn);\n  }\n  return setterFn;\n}\nObject.defineProperty(attributeSetterFactory, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\nconst CLASS_PREFIX = 'class.';\nvar classSettersCache = StringMapWrapper.create();\nfunction classSetterFactory(className) {\n  var setterFn = StringMapWrapper.get(classSettersCache, className);\n  var dashCasedClassName;\n  if (isBlank(setterFn)) {\n    dashCasedClassName = camelCaseToDashCase(className);\n    setterFn = function(element, value) {\n      if (value) {\n        DOM.addClass(element, dashCasedClassName);\n      } else {\n        DOM.removeClass(element, dashCasedClassName);\n      }\n    };\n    StringMapWrapper.set(classSettersCache, className, setterFn);\n  }\n  return setterFn;\n}\nObject.defineProperty(classSetterFactory, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\nconst STYLE_PREFIX = 'style.';\nvar styleSettersCache = StringMapWrapper.create();\nfunction styleSetterFactory(styleName, styleSuffix) {\n  var cacheKey = styleName + styleSuffix;\n  var setterFn = StringMapWrapper.get(styleSettersCache, cacheKey);\n  var dashCasedStyleName;\n  if (isBlank(setterFn)) {\n    dashCasedStyleName = camelCaseToDashCase(styleName);\n    setterFn = function(element, value) {\n      var valAsStr;\n      if (isPresent(value)) {\n        valAsStr = stringify(value);\n        DOM.setStyle(element, dashCasedStyleName, valAsStr + styleSuffix);\n      } else {\n        DOM.removeStyle(element, dashCasedStyleName);\n      }\n    };\n    StringMapWrapper.set(styleSettersCache, cacheKey, setterFn);\n  }\n  return setterFn;\n}\nObject.defineProperty(styleSetterFactory, \"parameters\", {get: function() {\n    return [[assert.type.string], [assert.type.string]];\n  }});\nfunction resolvePropertyName(attrName) {\n  var mappedPropName = StringMapWrapper.get(DOM.attrToPropMap, attrName);\n  return isPresent(mappedPropName) ? mappedPropName : attrName;\n}\nObject.defineProperty(resolvePropertyName, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\n//# sourceMappingURL=property_setter_factory.js.map\n\n//# sourceMappingURL=./property_setter_factory.map"]}