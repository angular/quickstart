{"version":3,"sources":["@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/10","src/core/compiler/template_loader.js","src/core/compiler/@traceur/generated/TemplateParser/8","src/core/compiler/@traceur/generated/TemplateParser/7"],"names":[],"mappings":"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","file":"src/core/compiler/template_loader.js","sourceRoot":"/home/tonyo/projects/quickstart/node_modules/angular2/es6/prod/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","import {isBlank, isPresent, BaseException, stringify} from 'angular2/src/facade/lang';\nimport {Map, MapWrapper, StringMapWrapper, StringMap} from 'angular2/src/facade/collection';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\n\nimport {XHR} from './xhr/xhr';\n\nimport {Template} from 'angular2/src/core/annotations/template';\n\nimport {UrlResolver} from './url_resolver';\n\n/**\n * Strategy to load component templates.\n */\nexport class TemplateLoader {\n  _xhr: XHR;\n  _htmlCache: StringMap;\n  _baseUrls: Map<Type, string>;\n  _urlCache: Map<Type, string>;\n  _urlResolver: UrlResolver;\n\n  constructor(xhr: XHR, urlResolver: UrlResolver) {\n    this._xhr = xhr;\n    this._urlResolver = urlResolver;\n    this._htmlCache = StringMapWrapper.create();\n    this._baseUrls = MapWrapper.create();\n    this._urlCache = MapWrapper.create();\n  }\n\n  // TODO(vicb): union type: return an Element or a Promise<Element>\n  load(template: Template) {\n    if (isPresent(template.inline)) {\n      return DOM.createTemplate(template.inline);\n    }\n\n    if (isPresent(template.url)) {\n      var url = this.getTemplateUrl(template);\n      var promise = StringMapWrapper.get(this._htmlCache, url);\n\n      if (isBlank(promise)) {\n        promise = this._xhr.get(url).then(function (html) {\n          var template = DOM.createTemplate(html);\n          return template;\n        });\n        StringMapWrapper.set(this._htmlCache, url, promise);\n      }\n\n      return promise;\n    }\n\n    throw new BaseException('Templates should have either their url or inline property set');\n  }\n\n  setBaseUrl(template: Template, baseUrl: string) {\n    MapWrapper.set(this._baseUrls, template, baseUrl);\n    MapWrapper.delete(this._urlCache, template);\n  }\n\n  getTemplateUrl(template: Template) {\n    if (!MapWrapper.contains(this._urlCache, template)) {\n      var baseUrl = MapWrapper.get(this._baseUrls, template);\n      if (isBlank(baseUrl)) {\n        throw new BaseException('The template base URL is not set');\n      }\n      var templateUrl;\n      if (isPresent(template.url)) {\n        templateUrl = this._urlResolver.resolve(baseUrl, template.url);\n      } else {\n        templateUrl = baseUrl;\n      }\n      MapWrapper.set(this._urlCache, template, templateUrl);\n    }\n\n    return MapWrapper.get(this._urlCache, template);\n  }\n}\n","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.type.$__placeholder__0)"]}