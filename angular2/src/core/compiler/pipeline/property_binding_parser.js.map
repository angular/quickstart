{"version":3,"sources":["property_binding_parser.js"],"names":[],"mappings":"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","file":"src/core/compiler/pipeline/property_binding_parser.js","sourceRoot":"/Users/justin/workspace/angular2_quckstart/quickstart/node_modules/angular2/es6/prod/","sourcesContent":["import {isPresent,\n  isBlank,\n  RegExpWrapper,\n  BaseException} from 'angular2/src/facade/lang';\nimport {MapWrapper} from 'angular2/src/facade/collection';\nimport {Parser,\n  AST,\n  ExpressionWithSource} from 'angular2/change_detection';\nimport {CompileStep} from './compile_step';\nimport {CompileElement} from './compile_element';\nimport {CompileControl} from './compile_control';\nvar BIND_NAME_REGEXP = RegExpWrapper.create('^(?:(?:(?:(bind)|(var)|(on))-(.+))|\\\\[([^\\\\]]+)\\\\]|\\\\(([^\\\\)]+)\\\\)|(#)(.+))$');\nexport class PropertyBindingParser extends CompileStep {\n  constructor(parser) {\n    super();\n    this._parser = parser;\n  }\n  process(parent, current, control) {\n    if (current.ignoreBindings) {\n      return ;\n    }\n    var attrs = current.attrs();\n    var newAttrs = MapWrapper.create();\n    var desc = current.elementDescription;\n    MapWrapper.forEach(attrs, (attrValue, attrName) => {\n      var bindParts = RegExpWrapper.firstMatch(BIND_NAME_REGEXP, attrName);\n      if (isPresent(bindParts)) {\n        if (isPresent(bindParts[1])) {\n          current.addPropertyBinding(bindParts[4], this._parseBinding(attrValue, desc));\n          MapWrapper.set(newAttrs, bindParts[4], attrValue);\n        } else if (isPresent(bindParts[2]) || isPresent(bindParts[7])) {\n          var identifier = (isPresent(bindParts[4]) && bindParts[4] !== '') ? bindParts[4] : bindParts[8];\n          var value = attrValue == '' ? '\\$implicit' : attrValue;\n          current.addVariableBinding(identifier, value);\n          MapWrapper.set(newAttrs, identifier, value);\n        } else if (isPresent(bindParts[3])) {\n          current.addEventBinding(bindParts[4], this._parseAction(attrValue, desc));\n        } else if (isPresent(bindParts[5])) {\n          current.addPropertyBinding(bindParts[5], this._parseBinding(attrValue, desc));\n          MapWrapper.set(newAttrs, bindParts[5], attrValue);\n        } else if (isPresent(bindParts[6])) {\n          current.addEventBinding(bindParts[6], this._parseAction(attrValue, desc));\n        }\n      } else {\n        var ast = this._parseInterpolation(attrValue, desc);\n        if (isPresent(ast)) {\n          current.addPropertyBinding(attrName, ast);\n        } else {\n          current.addAttribute(attrName, attrValue);\n        }\n      }\n    });\n    MapWrapper.forEach(newAttrs, (attrValue, attrName) => {\n      MapWrapper.set(attrs, attrName, attrValue);\n    });\n  }\n  _parseInterpolation(input, location) {\n    return this._parser.parseInterpolation(input, location);\n  }\n  _parseBinding(input, location) {\n    return this._parser.parseBinding(input, location);\n  }\n  _parseAction(input, location) {\n    return this._parser.parseAction(input, location);\n  }\n}\nObject.defineProperty(PropertyBindingParser, \"parameters\", {get: function() {\n    return [[Parser]];\n  }});\nObject.defineProperty(PropertyBindingParser.prototype.process, \"parameters\", {get: function() {\n    return [[CompileElement], [CompileElement], [CompileControl]];\n  }});\nObject.defineProperty(PropertyBindingParser.prototype._parseInterpolation, \"parameters\", {get: function() {\n    return [[assert.type.string], [assert.type.string]];\n  }});\nObject.defineProperty(PropertyBindingParser.prototype._parseBinding, \"parameters\", {get: function() {\n    return [[assert.type.string], [assert.type.string]];\n  }});\nObject.defineProperty(PropertyBindingParser.prototype._parseAction, \"parameters\", {get: function() {\n    return [[assert.type.string], [assert.type.string]];\n  }});\n//# sourceMappingURL=property_binding_parser.js.map\n\n//# sourceMappingURL=./property_binding_parser.map"]}