{"version":3,"sources":["@traceur/generated/TemplateParser/5","src/core/compiler/pipeline/compile_element.js","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/24","@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/10","src/core/compiler/pipeline/@traceur/generated/TemplateParser/24","src/core/compiler/pipeline/@traceur/generated/TemplateParser/23"],"names":[],"mappings":"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","file":"src/core/compiler/pipeline/compile_element.js","sourceRoot":"/Users/deast/Angular/quickstart/node_modules/angular2/es6/prod/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {List, Map, ListWrapper, MapWrapper} from 'angular2/src/facade/collection';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\nimport {int, isBlank, isPresent, Type, StringJoiner, assertionsEnabled} from 'angular2/src/facade/lang';\nimport {DirectiveMetadata} from '../directive_metadata';\nimport {Decorator, Component, Viewport, DynamicComponent} from '../../annotations/annotations';\nimport {ElementBinder} from '../element_binder';\nimport {ProtoElementInjector} from '../element_injector';\nimport * as viewModule from '../view';\nimport {dashCaseToCamelCase} from '../string_utils';\n\nimport {AST} from 'angular2/change_detection';\n\n/**\n * Collects all data that is needed to process an element\n * in the compile process. Fields are filled\n * by the CompileSteps starting out with the pure HTMLElement.\n */\nexport class CompileElement {\n  element;\n  _attrs:Map;\n  _classList:List;\n  textNodeBindings:Map;\n  propertyBindings:Map;\n  eventBindings:Map;\n  attributes:Map;\n\n  /// Store directive name to template name mapping.\n  /// Directive name is what the directive exports the variable as\n  /// Template name is how it is reffered to it in template\n  variableBindings:Map;\n  decoratorDirectives:List<DirectiveMetadata>;\n  viewportDirective:DirectiveMetadata;\n  componentDirective:DirectiveMetadata;\n  hasNestedView:boolean;\n  _allDirectives:List<DirectiveMetadata>;\n  isViewRoot:boolean;\n  hasBindings:boolean;\n  inheritedProtoView:viewModule.ProtoView;\n  inheritedProtoElementInjector:ProtoElementInjector;\n  inheritedElementBinder:ElementBinder;\n  distanceToParentInjector:int;\n  distanceToParentBinder:int;\n  compileChildren: boolean;\n  ignoreBindings: boolean;\n  elementDescription: string; // e.g. '<div [class]=\"foo\">' : used to provide context in case of error\n  contentTagSelector: string;\n\n  constructor(element, compilationUnit = '') {\n    this.element = element;\n    this._attrs = null;\n    this._classList = null;\n    this.textNodeBindings = null;\n    this.propertyBindings = null;\n    this.eventBindings = null;\n    this.variableBindings = null;\n    this.decoratorDirectives = null;\n    this.viewportDirective = null;\n    this.componentDirective = null;\n    this.hasNestedView = false;\n    this._allDirectives = null;\n    this.isViewRoot = false;\n    this.hasBindings = false;\n    // inherited down to children if they don't have\n    // an own protoView\n    this.inheritedProtoView = null;\n    // inherited down to children if they don't have\n    // an own protoElementInjector\n    this.inheritedProtoElementInjector = null;\n    // inherited down to children if they don't have\n    // an own elementBinder\n    this.inheritedElementBinder = null;\n    this.distanceToParentInjector = 0;\n    this.distanceToParentBinder = 0;\n    this.compileChildren = true;\n    // set to true to ignore all the bindings on the element\n    this.ignoreBindings = false;\n    this.contentTagSelector = null;\n    // description is calculated here as compilation steps may change the element\n    var tplDesc = assertionsEnabled()? getElementDescription(element) : null;\n    if (compilationUnit !== '') {\n      this.elementDescription = compilationUnit;\n      if (isPresent(tplDesc)) this.elementDescription += \": \" + tplDesc;\n    } else {\n      this.elementDescription = tplDesc;\n    }\n  }\n\n  refreshAttrs() {\n    this._attrs = null;\n  }\n\n  attrs():Map<string,string> {\n    if (isBlank(this._attrs)) {\n      this._attrs = DOM.attributeMap(this.element);\n    }\n    return this._attrs;\n  }\n\n  refreshClassList() {\n    this._classList = null;\n  }\n\n  classList():List<string> {\n    if (isBlank(this._classList)) {\n      this._classList = ListWrapper.create();\n      var elClassList = DOM.classList(this.element);\n      for (var i = 0; i < elClassList.length; i++) {\n        ListWrapper.push(this._classList, elClassList[i]);\n      }\n    }\n    return this._classList;\n  }\n\n  addTextNodeBinding(indexInParent:int, expression:AST) {\n    if (isBlank(this.textNodeBindings)) {\n      this.textNodeBindings = MapWrapper.create();\n    }\n    MapWrapper.set(this.textNodeBindings, indexInParent, expression);\n  }\n\n  addPropertyBinding(property:string, expression:AST) {\n    if (isBlank(this.propertyBindings)) {\n      this.propertyBindings = MapWrapper.create();\n    }\n    MapWrapper.set(this.propertyBindings, dashCaseToCamelCase(property), expression);\n  }\n\n  addVariableBinding(variableName:string, variableValue:string) {\n    if (isBlank(this.variableBindings)) {\n      this.variableBindings = MapWrapper.create();\n    }\n\n    // Store the variable map from value to variable, reflecting how it will be used later by\n    // View. When a local is set to the view, a lookup for the variable name will take place keyed\n    // by the \"value\", or exported identifier. For example, ng-repeat sets a view local of \"index\".\n    // When this occurs, a lookup keyed by \"index\" must occur to find if there is a var referencing\n    // it.\n    MapWrapper.set(this.variableBindings, variableValue, dashCaseToCamelCase(variableName));\n  }\n\n  addEventBinding(eventName:string, expression:AST) {\n    if (isBlank(this.eventBindings)) {\n      this.eventBindings = MapWrapper.create();\n    }\n    MapWrapper.set(this.eventBindings, eventName, expression);\n  }\n\n  addAttribute(attributeName:string, attributeValue:string) {\n    if (isBlank(this.attributes)) {\n      this.attributes = MapWrapper.create();\n    }\n    MapWrapper.set(this.attributes, attributeName, attributeValue);\n  }\n\n  addDirective(directive:DirectiveMetadata) {\n    var annotation = directive.annotation;\n    this._allDirectives = null;\n    if (annotation instanceof Decorator) {\n      if (isBlank(this.decoratorDirectives)) {\n        this.decoratorDirectives = ListWrapper.create();\n      }\n      ListWrapper.push(this.decoratorDirectives, directive);\n      if (!annotation.compileChildren) {\n        this.compileChildren = false;\n      }\n    } else if (annotation instanceof Viewport) {\n      this.viewportDirective = directive;\n    } else if (annotation instanceof Component) {\n      this.componentDirective = directive;\n      this.hasNestedView = true;\n    } else if (annotation instanceof DynamicComponent) {\n      this.componentDirective = directive;\n    }\n  }\n\n  getAllDirectives(): List<DirectiveMetadata> {\n    if (this._allDirectives === null) {\n      // Collect all the directives\n      // When present the component directive must be first\n      var directives = ListWrapper.create();\n      if (isPresent(this.componentDirective)) {\n        ListWrapper.push(directives, this.componentDirective);\n      }\n      if (isPresent(this.viewportDirective)) {\n        ListWrapper.push(directives, this.viewportDirective);\n      }\n      if (isPresent(this.decoratorDirectives)) {\n        directives = ListWrapper.concat(directives, this.decoratorDirectives);\n      }\n      this._allDirectives = directives;\n    }\n    return this._allDirectives;\n  }\n}\n\n// return an HTML representation of an element start tag - without its content\n// this is used to give contextual information in case of errors\nfunction getElementDescription(domElement):string {\n  var buf = new StringJoiner();\n  var atts = DOM.attributeMap(domElement);\n\n  buf.add(\"<\");\n  buf.add(DOM.tagName(domElement).toLowerCase());\n\n  // show id and class first to ease element identification\n  addDescriptionAttribute(buf, \"id\", MapWrapper.get(atts, \"id\"));\n  addDescriptionAttribute(buf, \"class\", MapWrapper.get(atts, \"class\"));\n  MapWrapper.forEach(atts, (attValue, attName) => {\n      if (attName !== \"id\" && attName !== \"class\") {\n          addDescriptionAttribute(buf, attName, attValue);\n      }\n  });\n\n  buf.add(\">\");\n  return buf.toString();\n}\n\n\nfunction addDescriptionAttribute(buffer:StringJoiner, attName:string, attValue) {\n  if (isPresent(attValue)) {\n      if (attValue.length === 0) {\n          buffer.add(' ' + attName);\n      } else {\n          buffer.add(' ' + attName + '=\"' + attValue + '\"');\n      }\n  }\n}\n","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","$__placeholder__0 = $__m;","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.type.$__placeholder__0)"]}