{"version":3,"sources":["directive_parser.js"],"names":[],"mappings":"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","file":"src/core/compiler/pipeline/directive_parser.js","sourceRoot":"/Users/justin/workspace/angular2_quckstart/quickstart/node_modules/angular2/es6/prod/","sourcesContent":["import {isPresent,\n  isBlank,\n  BaseException,\n  assertionsEnabled,\n  RegExpWrapper} from 'angular2/src/facade/lang';\nimport {List,\n  MapWrapper} from 'angular2/src/facade/collection';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\nimport {SelectorMatcher} from '../selector';\nimport {CssSelector} from '../selector';\nimport {DirectiveMetadata} from '../directive_metadata';\nimport {DynamicComponent,\n  Component,\n  Viewport} from '../../annotations/annotations';\nimport {CompileStep} from './compile_step';\nimport {CompileElement} from './compile_element';\nimport {CompileControl} from './compile_control';\nvar PROPERTY_BINDING_REGEXP = RegExpWrapper.create('^ *([^\\\\s\\\\|]+)');\nexport class DirectiveParser extends CompileStep {\n  constructor(directives) {\n    super();\n    var selector;\n    this._selectorMatcher = new SelectorMatcher();\n    for (var i = 0; i < directives.length; i++) {\n      var directiveMetadata = directives[i];\n      selector = CssSelector.parse(directiveMetadata.annotation.selector);\n      this._selectorMatcher.addSelectables(selector, directiveMetadata);\n    }\n  }\n  process(parent, current, control) {\n    var attrs = current.attrs();\n    var classList = current.classList();\n    var cssSelector = new CssSelector();\n    var nodeName = DOM.nodeName(current.element);\n    cssSelector.setElement(nodeName);\n    for (var i = 0; i < classList.length; i++) {\n      cssSelector.addClassName(classList[i]);\n    }\n    MapWrapper.forEach(attrs, (attrValue, attrName) => {\n      cssSelector.addAttribute(attrName, attrValue);\n    });\n    var isTemplateElement = DOM.isTemplateElement(current.element);\n    this._selectorMatcher.match(cssSelector, (selector, directive) => {\n      current.addDirective(checkDirectiveValidity(directive, current, isTemplateElement));\n    });\n  }\n}\nObject.defineProperty(DirectiveParser, \"parameters\", {get: function() {\n    return [[assert.genericType(List, DirectiveMetadata)]];\n  }});\nObject.defineProperty(DirectiveParser.prototype.process, \"parameters\", {get: function() {\n    return [[CompileElement], [CompileElement], [CompileControl]];\n  }});\nfunction checkDirectiveValidity(directive, current, isTemplateElement) {\n  var isComponent = directive.annotation instanceof Component || directive.annotation instanceof DynamicComponent;\n  var alreadyHasComponent = isPresent(current.componentDirective);\n  if (directive.annotation instanceof Viewport) {\n    if (!isTemplateElement) {\n      throw new BaseException(`Viewport directives need to be placed on <template> elements or elements ` + `with template attribute - check ${current.elementDescription}`);\n    } else if (isPresent(current.viewportDirective)) {\n      throw new BaseException(`Only one viewport directive can be used per element - check ${current.elementDescription}`);\n    }\n  } else if (isTemplateElement) {\n    throw new BaseException(`Only template directives are allowed on template elements - check ${current.elementDescription}`);\n  } else if (isComponent && alreadyHasComponent) {\n    throw new BaseException(`Multiple component directives not allowed on the same element - check ${current.elementDescription}`);\n  }\n  return directive;\n}\n//# sourceMappingURL=directive_parser.js.map\n\n//# sourceMappingURL=./directive_parser.map"]}