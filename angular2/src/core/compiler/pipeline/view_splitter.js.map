{"version":3,"sources":["@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/12","src/core/compiler/pipeline/view_splitter.js","@traceur/generated/TemplateParser/11","src/core/compiler/pipeline/@traceur/generated/TemplateParser/8","src/core/compiler/pipeline/@traceur/generated/TemplateParser/7"],"names":[],"mappings":"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","file":"src/core/compiler/pipeline/view_splitter.js","sourceRoot":"/home/tonyo/projects/quickstart/node_modules/angular2/es6/prod/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function($__super) {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4, $__super);\n        }($__placeholder__5)","import {isBlank, isPresent, BaseException} from 'angular2/src/facade/lang';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\nimport {MapWrapper, ListWrapper} from 'angular2/src/facade/collection';\n\nimport {Parser} from 'angular2/change_detection';\n\nimport {CompileStep} from './compile_step';\nimport {CompileElement} from './compile_element';\nimport {CompileControl} from './compile_control';\nimport {StringWrapper} from 'angular2/src/facade/lang';\n\n/**\n * Splits views at `<template>` elements or elements with `template` attribute:\n * For `<template>` elements:\n * - moves the content into a new and disconnected `<template>` element\n *   that is marked as view root.\n *\n * For elements with a `template` attribute:\n * - replaces the element with an empty `<template>` element,\n *   parses the content of the `template` attribute and adds the information to that\n *   `<template>` element. Marks the elements as view root.\n *\n * Note: In both cases the root of the nested view is disconnected from its parent element.\n * This is needed for browsers that don't support the `<template>` element\n * as we want to do locate elements with bindings using `getElementsByClassName` later on,\n * which should not descend into the nested view.\n *\n * Fills:\n * - CompileElement#isViewRoot\n * - CompileElement#variableBindings\n * - CompileElement#propertyBindings\n */\nexport class ViewSplitter extends CompileStep {\n  _parser:Parser;\n  constructor(parser:Parser) {\n    super();\n    this._parser = parser;\n  }\n\n  process(parent:CompileElement, current:CompileElement, control:CompileControl) {\n    var attrs = current.attrs();\n    var templateBindings = MapWrapper.get(attrs, 'template');\n    var hasTemplateBinding = isPresent(templateBindings);\n\n    // look for template shortcuts such as *if=\"condition\" and treat them as template=\"if condition\"\n    MapWrapper.forEach(attrs, (attrValue, attrName) => {\n      if (StringWrapper.startsWith(attrName, '*')) {\n        var key = StringWrapper.substring(attrName, 1);  // remove the star\n        if (hasTemplateBinding) {\n          // 2nd template binding detected\n          throw new BaseException(`Only one template directive per element is allowed: ` +\n            `${templateBindings} and ${key} cannot be used simultaneously ` +\n            `in ${current.elementDescription}`);\n        } else {\n          templateBindings = (attrValue.length == 0) ? key : key + ' ' + attrValue;\n          hasTemplateBinding = true;\n        }\n      }\n    });\n\n    if (isBlank(parent)) {\n      current.isViewRoot = true;\n    } else {\n      if (DOM.isTemplateElement(current.element)) {\n        if (!current.isViewRoot) {\n          var viewRoot = new CompileElement(DOM.createTemplate(''));\n          var currentElement = current.element;\n          var viewRootElement = viewRoot.element;\n          this._moveChildNodes(DOM.content(currentElement), DOM.content(viewRootElement));\n          // viewRoot doesn't appear in the original template, so we associate\n          // the current element description to get a more meaningful message in case of error\n          viewRoot.elementDescription = current.elementDescription;\n          viewRoot.isViewRoot = true;\n          control.addChild(viewRoot);\n        }\n      } else {\n        if (hasTemplateBinding) {\n          var newParent = new CompileElement(DOM.createTemplate(''));\n          // newParent doesn't appear in the original template, so we associate\n          // the current element description to get a more meaningful message in case of error\n          newParent.elementDescription = current.elementDescription;\n          current.isViewRoot = true;\n          this._parseTemplateBindings(templateBindings, newParent);\n          this._addParentElement(current.element, newParent.element);\n\n          control.addParent(newParent);\n          DOM.remove(current.element);\n        }\n      }\n    }\n  }\n\n  _moveChildNodes(source, target) {\n    var next = DOM.firstChild(source);\n    while (isPresent(next)) {\n      DOM.appendChild(target, next);\n      next = DOM.firstChild(source);\n    }\n  }\n\n  _addParentElement(currentElement, newParentElement) {\n    DOM.insertBefore(currentElement, newParentElement);\n    DOM.appendChild(newParentElement, currentElement);\n  }\n\n  _parseTemplateBindings(templateBindings:string, compileElement:CompileElement) {\n    var bindings = this._parser.parseTemplateBindings(templateBindings, compileElement.elementDescription);\n    for (var i=0; i<bindings.length; i++) {\n      var binding = bindings[i];\n      if (binding.keyIsVar) {\n        compileElement.addVariableBinding(binding.key, binding.name);\n        MapWrapper.set(compileElement.attrs(), binding.key, binding.name);\n      } else if (isPresent(binding.expression)) {\n        compileElement.addPropertyBinding(binding.key, binding.expression);\n        MapWrapper.set(compileElement.attrs(), binding.key, binding.expression.source);\n      } else {\n        DOM.setAttribute(compileElement.element, binding.key, '');\n      }\n    }\n  }\n}\n","$traceurRuntime.superConstructor($__placeholder__0).call($__placeholder__1)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.type.$__placeholder__0)"]}