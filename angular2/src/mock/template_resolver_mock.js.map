{"version":3,"sources":["template_resolver_mock.js"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,0JAAoB,UAAS,SAAQ;;;;;;;;;;AAApD,OAAO;AACD,UAAM,GADZ,SAAS,IAAG;AAAZ,UAAoB,KAAG,IAAkB,CAAC;AAA1C,iBAAoB,KAAG,WAAkB,CAAC;AAA1C,kBAAoB,KAAG,YAAkB,CAAC;IAElC,CAFR,UAAS,IAAG;AAAZ,WAAoB,KAAG,KAAkB,CAAC;AAA1C,gBAAoB,KAAG,UAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,eAAoB,KAAG,SAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,uBAAoB,KAAG,iBAAkB,CAAC;IAElC,CADuB;AACzB,UAAM;2BAFY,CAAA,SAAQ,AAAC,0BAAjC,SAAS,QAAO;AACN,AAAI,UAAA,uBAMP,SAAM,qBAAmB,CACnB,AAAC,CAAE;AARhB,AASI,wBATU,iBAAiB,AAAC,sBAAkB,KAAK,MAAmB,CAS/D;AACP,aAAG,cAAc,EAAI,CAAA,UAAS,OAAO,AAAC,EAAC,CAAC;QATM,AAUhD,CAViD;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;AAU5C,oBAAU,CAAV,UAAY,SAAQ,CAAG,CAAA,QAAO,CAAG;AAC/B,qBAAS,IAAI,AAAC,CAAC,IAAG,cAAc,CAAG,UAAQ,CAAG,SAAO,CAAC,CAAC;UACzD;AACA,gBAAM,CAAN,UAAQ,SAAQ,CAAG;AACjB,AAAI,cAAA,CAAA,QAAO,EAAI,CAAA,UAAS,IAAI,AAAC,CAAC,IAAG,cAAc,CAAG,UAAQ,CAAC,CAAC;AAC5D,eAAI,SAAQ,AAAC,CAAC,QAAO,CAAC,CAAG;AACvB,mBAAO,SAAO,CAAC;YACjB;AAAA,AACA,iBApBJ,CAAA,eAAc,SAAS,AAAC,iDAAwD,KAA3D,MAoBI,UAAQ,CApBO,CAoBL;UACjC;AAAA,aAlBgE,SAAO,CAAC,CAAC;MACnE,AAAC,CAGiC,gBAAe,CAH9B,EAJ2C;AAuBtE,WAAK,eAAe,AAAC,CAAC,oBAAmB,UAAU,YAAY,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AAC7F,eAAO,EAAC,CAAC,IAAG,CAAC,CAAG,EAAC,QAAO,CAAC,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,oBAAmB,UAAU,QAAQ,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AACzF,eAAO,EAAC,CAAC,IAAG,CAAC,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC;IA1B0B;EAC3B,CAAA;AADI,CAAC,CAAC;AA6BsC","file":"src/mock/template_resolver_mock.js","sourceRoot":"/Users/justin/workspace/angular2_quckstart/quickstart/node_modules/angular2/es6/prod/","sourcesContent":["import {Map,\n  MapWrapper,\n  ListWrapper} from 'angular2/src/facade/collection';\nimport {Type,\n  isPresent} from 'angular2/src/facade/lang';\nimport {Template} from 'angular2/src/core/annotations/template';\nimport {TemplateResolver} from 'angular2/src/core/compiler/template_resolver';\nexport class MockTemplateResolver extends TemplateResolver {\n  constructor() {\n    super();\n    this._cmpTemplates = MapWrapper.create();\n  }\n  setTemplate(component, template) {\n    MapWrapper.set(this._cmpTemplates, component, template);\n  }\n  resolve(component) {\n    var override = MapWrapper.get(this._cmpTemplates, component);\n    if (isPresent(override)) {\n      return override;\n    }\n    return super.resolve(component);\n  }\n}\nObject.defineProperty(MockTemplateResolver.prototype.setTemplate, \"parameters\", {get: function() {\n    return [[Type], [Template]];\n  }});\nObject.defineProperty(MockTemplateResolver.prototype.resolve, \"parameters\", {get: function() {\n    return [[Type]];\n  }});\n//# sourceMappingURL=template_resolver_mock.js.map\n\n//# sourceMappingURL=./template_resolver_mock.map"]}