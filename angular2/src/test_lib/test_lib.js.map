{"version":3,"sources":["@traceur/generated/TemplateParser/5","src/test_lib/test_lib.es6","@traceur/generated/TemplateParser/27","@traceur/generated/TemplateParser/28","@traceur/generated/TemplateParser/22","@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/10","src/test_lib/@traceur/generated/TemplateParser/24","@traceur/generated/TemplateParser/14","src/test_lib/test_lib.js"],"names":[],"mappings":"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","file":"src/test_lib/test_lib.js","sourceRoot":"/Users/deast/Angular/quickstart/node_modules/angular2/es6/prod/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {DOM} from 'angular2/src/dom/dom_adapter';\n\nimport {bind} from 'angular2/di';\n\nimport {createTestInjector, FunctionWithParamTokens, inject} from './test_injector';\n\nexport {inject} from './test_injector';\n\nexport {proxy} from 'rtts_assert/rtts_assert';\n\nvar _global = typeof window === 'undefined' ? global : window;\n\nexport var afterEach = _global.afterEach;\nexport var expect = _global.expect;\n\nexport var IS_DARTIUM = false;\n\nexport class AsyncTestCompleter {\n  _done: Function;\n\n  constructor(done: Function) {\n    this._done = done;\n  }\n\n  done() {\n    this._done();\n  }\n}\n\nvar jsmBeforeEach = _global.beforeEach;\nvar jsmDescribe = _global.describe;\nvar jsmDDescribe = _global.ddescribe;\nvar jsmXDescribe = _global.xdescribe;\nvar jsmIt = _global.it;\nvar jsmIIt = _global.iit;\nvar jsmXIt = _global.xit;\n\nvar runnerStack = [];\nvar inIt = false;\n\nvar testBindings;\n\nclass BeforeEachRunner {\n  constructor(parent: BeforeEachRunner) {\n    this._fns = [];\n    this._parent = parent;\n  }\n\n  beforeEach(fn: FunctionWithParamTokens) {\n    this._fns.push(fn);\n  }\n\n  run(injector) {\n    if (this._parent) this._parent.run();\n    this._fns.forEach((fn) => fn.execute(injector));\n  }\n}\n\n// Reset the test bindings before each test\njsmBeforeEach(() => { testBindings = []; });\n\nfunction _describe(jsmFn, ...args) {\n  var parentRunner = runnerStack.length === 0 ? null : runnerStack[runnerStack.length - 1];\n  var runner = new BeforeEachRunner(parentRunner);\n  runnerStack.push(runner);\n  var suite = jsmFn(...args);\n  runnerStack.pop();\n  return suite;\n}\n\nexport function describe(...args) {\n  return _describe(jsmDescribe, ...args);\n}\n\nexport function ddescribe(...args) {\n  return _describe(jsmDDescribe, ...args);\n}\n\nexport function xdescribe(...args) {\n  return _describe(jsmXDescribe, ...args);\n}\n\nexport function beforeEach(fn) {\n  if (runnerStack.length > 0) {\n    // Inside a describe block, beforeEach() uses a BeforeEachRunner\n    var runner = runnerStack[runnerStack.length - 1];\n    if (!(fn instanceof FunctionWithParamTokens)) {\n      fn = inject([], fn);\n    }\n    runner.beforeEach(fn);\n  } else {\n    // Top level beforeEach() are delegated to jasmine\n    jsmBeforeEach(fn);\n  }\n}\n\n/**\n * Allows overriding default bindings defined in test_injector.js.\n *\n * The given function must return a list of DI bindings.\n *\n * Example:\n *\n *   beforeEachBindings(() => [\n *     bind(Compiler).toClass(MockCompiler),\n *     bind(SomeToken).toValue(myValue),\n *   ]);\n */\nexport function beforeEachBindings(fn) {\n  jsmBeforeEach(() => {\n    var bindings = fn();\n    if (!bindings) return;\n    testBindings = [...testBindings, ...bindings];\n  });\n}\n\nfunction _it(jsmFn, name, fn) {\n  var runner = runnerStack[runnerStack.length - 1];\n\n  jsmFn(name, function(done) {\n    var async = false;\n\n    var completerBinding = bind(AsyncTestCompleter).toFactory(() => {\n      // Mark the test as async when an AsyncTestCompleter is injected in an it()\n      if (!inIt) throw new Error('AsyncTestCompleter can only be injected in an \"it()\"');\n      async = true;\n      return new AsyncTestCompleter(done);\n    });\n\n    var injector = createTestInjector([...testBindings, completerBinding]);\n\n    runner.run(injector);\n\n    if (!(fn instanceof FunctionWithParamTokens)) {\n      fn = inject([], fn);\n    }\n    inIt = true;\n    fn.execute(injector);\n    inIt = false;\n\n    if (!async) done();\n  });\n}\n\nexport function it(name, fn) {\n  return _it(jsmIt, name, fn);\n}\n\nexport function xit(name, fn) {\n  return _it(jsmXIt, name, fn);\n}\n\nexport function iit(name, fn) {\n  return _it(jsmIIt, name, fn);\n}\n\n// To make testing consistent between dart and js\n_global.print = function(msg) {\n  if (_global.dump) {\n    _global.dump(msg);\n  } else {\n    _global.console.log(msg);\n  }\n};\n\n// Some Map polyfills don't polyfill Map.toString correctly, which\n// gives us bad error messages in tests.\n// The only way to do this in Jasmine is to monkey patch a method\n// to the object :-(\n_global.Map.prototype.jasmineToString = function() {\n  var m = this;\n  if (!m) {\n    return ''+m;\n  }\n  var res = [];\n  m.forEach( (v,k) => {\n    res.push(`${k}:${v}`);\n  });\n  return `{ ${res.join(',')} }`;\n}\n\n_global.beforeEach(function() {\n  jasmine.addMatchers({\n    // Custom handler for Map as Jasmine does not support it yet\n    toEqual: function(util, customEqualityTesters) {\n      return {\n        compare: function(actual, expected) {\n          return {\n            pass: util.equals(actual, expected, [compareMap])\n          };\n        }\n      };\n\n      function compareMap(actual, expected) {\n        if (actual instanceof Map) {\n          var pass = actual.size === expected.size;\n          if (pass) {\n            actual.forEach( (v,k) => {\n              pass = pass && util.equals(v, expected.get(k));\n            });\n          }\n          return pass;\n        } else {\n          return undefined;\n        }\n      }\n    },\n\n    toBePromise: function() {\n      return {\n        compare: function (actual, expectedClass) {\n          var pass = typeof actual === 'object' && typeof actual.then === 'function';\n          return {\n            pass: pass,\n            get message() {\n              return 'Expected ' + actual + ' to be a promise';\n            }\n          };\n        }\n      };\n    },\n\n    toBeAnInstanceOf: function() {\n      return {\n        compare: function(actual, expectedClass) {\n          var pass = typeof actual === 'object' && actual instanceof expectedClass;\n          return {\n            pass: pass,\n            get message() {\n              return 'Expected ' + actual + ' to be an instance of ' + expectedClass;\n            }\n          };\n        }\n      };\n    },\n\n    toHaveText: function() {\n      return {\n        compare: function(actual, expectedText) {\n          var actualText = elementText(actual);\n          return {\n            pass: actualText == expectedText,\n            get message() {\n              return 'Expected ' + actualText + ' to be equal to ' + expectedText;\n            }\n          };\n        }\n      };\n    },\n\n    toImplement: function() {\n      return {\n        compare: function(actualObject, expectedInterface) {\n          var objProps = Object.keys(actualObject.constructor.prototype);\n          var intProps = Object.keys(expectedInterface.prototype);\n\n          var missedMethods = [];\n          intProps.forEach((k) => {\n            if (!actualObject.constructor.prototype[k]) missedMethods.push(k);\n          });\n\n          return {\n            pass: missedMethods.length == 0,\n            get message() {\n              return 'Expected ' + actualObject + ' to have the following methods: ' + missedMethods.join(\", \");\n            }\n          };\n        }\n      };\n    }\n  });\n});\n\nexport class SpyObject {\n  spy(name){\n    if (! this[name]) {\n      this[name] = this._createGuinnessCompatibleSpy();\n    }\n    return this[name];\n  }\n\n  rttsAssert(value) {\n    return true;\n  }\n\n  _createGuinnessCompatibleSpy(){\n    var newSpy = jasmine.createSpy();\n    newSpy.andCallFake = newSpy.and.callFake;\n    return newSpy;\n  }\n}\n\nfunction elementText(n) {\n  var hasNodes = (n) => {var children = DOM.childNodes(n); return children && children.length > 0;}\n\n  if (n instanceof Array) {\n    return n.map((nn) => elementText(nn)).join(\"\");\n  }\n\n  if (DOM.isCommentNode(n)) {\n    return '';\n  }\n\n  if (DOM.isElementNode(n) && DOM.tagName(n) == 'CONTENT') {\n    return elementText(Array.prototype.slice.apply(DOM.getDistributedNodes(n)));\n  }\n\n  if (DOM.hasShadowRoot(n)) {\n    return elementText(DOM.childNodesAsList(DOM.getShadowRoot(n)));\n  }\n\n  if (hasNodes(n)) {\n    return elementText(DOM.childNodesAsList(n));\n  }\n\n  return DOM.getText(n);\n}\n","\n            for (var $__placeholder__0 = [], $__placeholder__1 = $__placeholder__2;\n                 $__placeholder__3 < arguments.length; $__placeholder__4++)\n              $__placeholder__5[$__placeholder__6 - $__placeholder__7] = arguments[$__placeholder__8];","$traceurRuntime.spread($__placeholder__0)","\n            for (var $__placeholder__0 = [], $__placeholder__1 = 0;\n                 $__placeholder__2 < arguments.length; $__placeholder__3++)\n              $__placeholder__4[$__placeholder__5] = arguments[$__placeholder__6];","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","$__export($__placeholder__0, $__m.$__placeholder__1);","$__export($__placeholder__0, $__placeholder__1)","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","$__placeholder__0 = $__placeholder__1","import {DOM} from 'angular2/src/dom/dom_adapter';\nimport {bind} from 'angular2/di';\nimport {createTestInjector,\n  FunctionWithParamTokens,\n  inject} from './test_injector';\nexport {inject} from './test_injector';\nexport {proxy} from 'rtts_assert/rtts_assert';\nvar _global = typeof window === 'undefined' ? global : window;\nexport var afterEach = _global.afterEach;\nexport var expect = _global.expect;\nexport var IS_DARTIUM = false;\nexport class AsyncTestCompleter {\n  constructor(done) {\n    this._done = done;\n  }\n  done() {\n    this._done();\n  }\n}\nObject.defineProperty(AsyncTestCompleter, \"parameters\", {get: function() {\n    return [[Function]];\n  }});\nvar jsmBeforeEach = _global.beforeEach;\nvar jsmDescribe = _global.describe;\nvar jsmDDescribe = _global.ddescribe;\nvar jsmXDescribe = _global.xdescribe;\nvar jsmIt = _global.it;\nvar jsmIIt = _global.iit;\nvar jsmXIt = _global.xit;\nvar runnerStack = [];\nvar inIt = false;\nvar testBindings;\nclass BeforeEachRunner {\n  constructor(parent) {\n    this._fns = [];\n    this._parent = parent;\n  }\n  beforeEach(fn) {\n    this._fns.push(fn);\n  }\n  run(injector) {\n    if (this._parent)\n      this._parent.run();\n    this._fns.forEach((fn) => fn.execute(injector));\n  }\n}\nObject.defineProperty(BeforeEachRunner, \"parameters\", {get: function() {\n    return [[BeforeEachRunner]];\n  }});\nObject.defineProperty(BeforeEachRunner.prototype.beforeEach, \"parameters\", {get: function() {\n    return [[FunctionWithParamTokens]];\n  }});\njsmBeforeEach(() => {\n  testBindings = [];\n});\nfunction _describe(jsmFn, ...args) {\n  var parentRunner = runnerStack.length === 0 ? null : runnerStack[runnerStack.length - 1];\n  var runner = new BeforeEachRunner(parentRunner);\n  runnerStack.push(runner);\n  var suite = jsmFn(...args);\n  runnerStack.pop();\n  return suite;\n}\nexport function describe(...args) {\n  return _describe(jsmDescribe, ...args);\n}\nexport function ddescribe(...args) {\n  return _describe(jsmDDescribe, ...args);\n}\nexport function xdescribe(...args) {\n  return _describe(jsmXDescribe, ...args);\n}\nexport function beforeEach(fn) {\n  if (runnerStack.length > 0) {\n    var runner = runnerStack[runnerStack.length - 1];\n    if (!(fn instanceof FunctionWithParamTokens)) {\n      fn = inject([], fn);\n    }\n    runner.beforeEach(fn);\n  } else {\n    jsmBeforeEach(fn);\n  }\n}\nexport function beforeEachBindings(fn) {\n  jsmBeforeEach(() => {\n    var bindings = fn();\n    if (!bindings)\n      return ;\n    testBindings = [...testBindings, ...bindings];\n  });\n}\nfunction _it(jsmFn, name, fn) {\n  var runner = runnerStack[runnerStack.length - 1];\n  jsmFn(name, function(done) {\n    var async = false;\n    var completerBinding = bind(AsyncTestCompleter).toFactory(() => {\n      if (!inIt)\n        throw new Error('AsyncTestCompleter can only be injected in an \"it()\"');\n      async = true;\n      return new AsyncTestCompleter(done);\n    });\n    var injector = createTestInjector([...testBindings, completerBinding]);\n    runner.run(injector);\n    if (!(fn instanceof FunctionWithParamTokens)) {\n      fn = inject([], fn);\n    }\n    inIt = true;\n    fn.execute(injector);\n    inIt = false;\n    if (!async)\n      done();\n  });\n}\nexport function it(name, fn) {\n  return _it(jsmIt, name, fn);\n}\nexport function xit(name, fn) {\n  return _it(jsmXIt, name, fn);\n}\nexport function iit(name, fn) {\n  return _it(jsmIIt, name, fn);\n}\n_global.print = function(msg) {\n  if (_global.dump) {\n    _global.dump(msg);\n  } else {\n    _global.console.log(msg);\n  }\n};\n_global.Map.prototype.jasmineToString = function() {\n  var m = this;\n  if (!m) {\n    return '' + m;\n  }\n  var res = [];\n  m.forEach((v, k) => {\n    res.push(`${k}:${v}`);\n  });\n  return `{ ${res.join(',')} }`;\n};\n_global.beforeEach(function() {\n  jasmine.addMatchers({\n    toEqual: function(util, customEqualityTesters) {\n      return {compare: function(actual, expected) {\n          return {pass: util.equals(actual, expected, [compareMap])};\n        }};\n      function compareMap(actual, expected) {\n        if (actual instanceof Map) {\n          var pass = actual.size === expected.size;\n          if (pass) {\n            actual.forEach((v, k) => {\n              pass = pass && util.equals(v, expected.get(k));\n            });\n          }\n          return pass;\n        } else {\n          return undefined;\n        }\n      }\n    },\n    toBePromise: function() {\n      return {compare: function(actual, expectedClass) {\n          var pass = typeof actual === 'object' && typeof actual.then === 'function';\n          return {\n            pass: pass,\n            get message() {\n              return 'Expected ' + actual + ' to be a promise';\n            }\n          };\n        }};\n    },\n    toBeAnInstanceOf: function() {\n      return {compare: function(actual, expectedClass) {\n          var pass = typeof actual === 'object' && actual instanceof expectedClass;\n          return {\n            pass: pass,\n            get message() {\n              return 'Expected ' + actual + ' to be an instance of ' + expectedClass;\n            }\n          };\n        }};\n    },\n    toHaveText: function() {\n      return {compare: function(actual, expectedText) {\n          var actualText = elementText(actual);\n          return {\n            pass: actualText == expectedText,\n            get message() {\n              return 'Expected ' + actualText + ' to be equal to ' + expectedText;\n            }\n          };\n        }};\n    },\n    toImplement: function() {\n      return {compare: function(actualObject, expectedInterface) {\n          var objProps = Object.keys(actualObject.constructor.prototype);\n          var intProps = Object.keys(expectedInterface.prototype);\n          var missedMethods = [];\n          intProps.forEach((k) => {\n            if (!actualObject.constructor.prototype[k])\n              missedMethods.push(k);\n          });\n          return {\n            pass: missedMethods.length == 0,\n            get message() {\n              return 'Expected ' + actualObject + ' to have the following methods: ' + missedMethods.join(\", \");\n            }\n          };\n        }};\n    }\n  });\n});\nexport class SpyObject {\n  spy(name) {\n    if (!this[name]) {\n      this[name] = this._createGuinnessCompatibleSpy();\n    }\n    return this[name];\n  }\n  rttsAssert(value) {\n    return true;\n  }\n  _createGuinnessCompatibleSpy() {\n    var newSpy = jasmine.createSpy();\n    newSpy.andCallFake = newSpy.and.callFake;\n    return newSpy;\n  }\n}\nfunction elementText(n) {\n  var hasNodes = (n) => {\n    var children = DOM.childNodes(n);\n    return children && children.length > 0;\n  };\n  if (n instanceof Array) {\n    return n.map((nn) => elementText(nn)).join(\"\");\n  }\n  if (DOM.isCommentNode(n)) {\n    return '';\n  }\n  if (DOM.isElementNode(n) && DOM.tagName(n) == 'CONTENT') {\n    return elementText(Array.prototype.slice.apply(DOM.getDistributedNodes(n)));\n  }\n  if (DOM.hasShadowRoot(n)) {\n    return elementText(DOM.childNodesAsList(DOM.getShadowRoot(n)));\n  }\n  if (hasNodes(n)) {\n    return elementText(DOM.childNodesAsList(n));\n  }\n  return DOM.getText(n);\n}\n\n//# sourceMappingURL=/Users/tbosch/projects/temp/angular2_clone/modules/angular2/src/test_lib/test_lib.map\n\n//# sourceMappingURL=./test_lib.map"]}