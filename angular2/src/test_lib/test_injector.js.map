{"version":3,"sources":["test_injector.js"],"names":[],"mappings":"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","file":"src/test_lib/test_injector.js","sourceRoot":"/Users/justin/workspace/angular2_quckstart/quickstart/node_modules/angular2/es6/prod/","sourcesContent":["import {bind} from 'angular2/di';\nimport {Compiler,\n  CompilerCache} from 'angular2/src/core/compiler/compiler';\nimport {Reflector,\n  reflector} from 'angular2/src/reflection/reflection';\nimport {Parser,\n  Lexer,\n  ChangeDetection,\n  dynamicChangeDetection} from 'angular2/change_detection';\nimport {ExceptionHandler} from 'angular2/src/core/exception_handler';\nimport {TemplateLoader} from 'angular2/src/core/compiler/template_loader';\nimport {TemplateResolver} from 'angular2/src/core/compiler/template_resolver';\nimport {DirectiveMetadataReader} from 'angular2/src/core/compiler/directive_metadata_reader';\nimport {ShadowDomStrategy,\n  NativeShadowDomStrategy} from 'angular2/src/core/compiler/shadow_dom_strategy';\nimport {XHR} from 'angular2/src/core/compiler/xhr/xhr';\nimport {XHRMock} from 'angular2/src/mock/xhr_mock';\nimport {ComponentUrlMapper} from 'angular2/src/core/compiler/component_url_mapper';\nimport {UrlResolver} from 'angular2/src/core/compiler/url_resolver';\nimport {StyleUrlResolver} from 'angular2/src/core/compiler/style_url_resolver';\nimport {StyleInliner} from 'angular2/src/core/compiler/style_inliner';\nimport {CssProcessor} from 'angular2/src/core/compiler/css_processor';\nimport {Injector} from 'angular2/di';\nimport {List,\n  ListWrapper} from 'angular2/src/facade/collection';\nimport {FunctionWrapper} from 'angular2/src/facade/lang';\nfunction _getRootBindings() {\n  return [bind(Reflector).toValue(reflector)];\n}\nfunction _getAppBindings() {\n  return [bind(ShadowDomStrategy).toClass(NativeShadowDomStrategy), Compiler, CompilerCache, TemplateResolver, bind(ChangeDetection).toValue(dynamicChangeDetection), TemplateLoader, DirectiveMetadataReader, Parser, Lexer, ExceptionHandler, bind(XHR).toClass(XHRMock), ComponentUrlMapper, UrlResolver, StyleUrlResolver, StyleInliner, bind(CssProcessor).toFactory(() => new CssProcessor(null), [])];\n}\nexport function createTestInjector(bindings) {\n  var rootInjector = new Injector(_getRootBindings());\n  return rootInjector.createChild(ListWrapper.concat(_getAppBindings(), bindings));\n}\nObject.defineProperty(createTestInjector, \"parameters\", {get: function() {\n    return [[List]];\n  }});\nexport function inject(tokens, fn) {\n  return new FunctionWithParamTokens(tokens, fn);\n}\nObject.defineProperty(inject, \"parameters\", {get: function() {\n    return [[List], [Function]];\n  }});\nexport class FunctionWithParamTokens {\n  constructor(tokens, fn) {\n    this._tokens = tokens;\n    this._fn = fn;\n  }\n  execute(injector) {\n    var params = ListWrapper.map(this._tokens, (t) => injector.get(t));\n    FunctionWrapper.apply(this._fn, params);\n  }\n}\nObject.defineProperty(FunctionWithParamTokens, \"parameters\", {get: function() {\n    return [[List], [Function]];\n  }});\nObject.defineProperty(FunctionWithParamTokens.prototype.execute, \"parameters\", {get: function() {\n    return [[Injector]];\n  }});\n//# sourceMappingURL=test_injector.js.map\n\n//# sourceMappingURL=./test_injector.map"]}