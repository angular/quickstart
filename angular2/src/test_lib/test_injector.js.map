{"version":3,"sources":["@traceur/generated/TemplateParser/5","src/test_lib/test_injector.js","@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/9","src/test_lib/@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/10"],"names":[],"mappings":"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","file":"src/test_lib/test_injector.js","sourceRoot":"/home/tonyo/projects/quickstart/node_modules/angular2/es6/prod/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {bind} from 'angular2/di';\nimport {Compiler, CompilerCache} from 'angular2/src/core/compiler/compiler';\nimport {Reflector, reflector} from 'angular2/src/reflection/reflection';\nimport {Parser, Lexer, ChangeDetection, dynamicChangeDetection} from 'angular2/change_detection';\nimport {ExceptionHandler} from 'angular2/src/core/exception_handler';\nimport {TemplateLoader} from 'angular2/src/core/compiler/template_loader';\nimport {TemplateResolver} from 'angular2/src/core/compiler/template_resolver';\nimport {DirectiveMetadataReader} from 'angular2/src/core/compiler/directive_metadata_reader';\nimport {ShadowDomStrategy, NativeShadowDomStrategy} from 'angular2/src/core/compiler/shadow_dom_strategy';\nimport {XHR} from 'angular2/src/core/compiler/xhr/xhr';\nimport {XHRMock} from 'angular2/src/mock/xhr_mock';\nimport {ComponentUrlMapper} from 'angular2/src/core/compiler/component_url_mapper';\nimport {UrlResolver} from 'angular2/src/core/compiler/url_resolver';\nimport {StyleUrlResolver} from 'angular2/src/core/compiler/style_url_resolver';\nimport {StyleInliner} from 'angular2/src/core/compiler/style_inliner';\nimport {CssProcessor} from 'angular2/src/core/compiler/css_processor';\n\nimport {Injector} from 'angular2/di';\n\nimport {List, ListWrapper} from 'angular2/src/facade/collection';\nimport {FunctionWrapper} from 'angular2/src/facade/lang';\n\n/**\n * Returns the root injector bindings.\n *\n * This must be kept in sync with the _rootBindings in application.js\n *\n * @returns {*[]}\n */\nfunction _getRootBindings() {\n  return [\n    bind(Reflector).toValue(reflector),\n  ];\n}\n\n/**\n * Returns the application injector bindings.\n *\n * This must be kept in sync with _injectorBindings() in application.js\n *\n * @returns {*[]}\n */\nfunction _getAppBindings() {\n  return [\n    bind(ShadowDomStrategy).toClass(NativeShadowDomStrategy),\n    Compiler,\n    CompilerCache,\n    TemplateResolver,\n    bind(ChangeDetection).toValue(dynamicChangeDetection),\n    TemplateLoader,\n    DirectiveMetadataReader,\n    Parser,\n    Lexer,\n    ExceptionHandler,\n    bind(XHR).toClass(XHRMock),\n    ComponentUrlMapper,\n    UrlResolver,\n    StyleUrlResolver,\n    StyleInliner,\n    bind(CssProcessor).toFactory(() => new CssProcessor(null), []),\n  ];\n}\n\nexport function createTestInjector(bindings: List) {\n  var rootInjector = new Injector(_getRootBindings());\n  return rootInjector.createChild(ListWrapper.concat(_getAppBindings(), bindings));\n}\n\n/**\n * Allows injecting dependencies in `beforeEach()` and `it()`.\n *\n * Example:\n *\n * ```\n * beforeEach(inject([Dependency, AClass], (dep, object) => {\n *   // some code that uses `dep` and `object`\n *   // ...\n * }));\n *\n * it('...', inject([AClass, AsyncTestCompleter], (object, async) => {\n *   object.doSomething().then(() => {\n *     expect(...);\n *     async.done();\n *   });\n * })\n * ```\n *\n * Notes:\n * - injecting an `AsyncTestCompleter` allow completing async tests - this is the equivalent of\n *   adding a `done` parameter in Jasmine,\n * - inject is currently a function because of some Traceur limitation the syntax should eventually\n *   becomes `it('...', @Inject (object: AClass, async: AsyncTestCompleter) => { ... });`\n *\n * @param {Array} tokens\n * @param {Function} fn\n * @return {FunctionWithParamTokens}\n */\nexport function inject(tokens: List, fn: Function) {\n  return new FunctionWithParamTokens(tokens, fn);\n}\n\nexport class FunctionWithParamTokens {\n  _tokens: List;\n  _fn: Function;\n\n  constructor(tokens: List, fn: Function) {\n    this._tokens = tokens;\n    this._fn = fn;\n  }\n\n  execute(injector: Injector) {\n    var params = ListWrapper.map(this._tokens, (t) => injector.get(t));\n    FunctionWrapper.apply(this._fn, params);\n  }\n}\n\n","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()"]}