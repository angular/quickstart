{"version":3,"sources":["for.js"],"names":[],"mappings":"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","file":"src/directives/for.js","sourceRoot":"/Users/justin/workspace/angular2_quckstart/quickstart/node_modules/angular2/es6/prod/","sourcesContent":["import {Viewport} from 'angular2/src/core/annotations/annotations';\nimport {ViewContainer} from 'angular2/src/core/compiler/view_container';\nimport {View} from 'angular2/src/core/compiler/view';\nimport {isPresent,\n  isBlank} from 'angular2/src/facade/lang';\nimport {ListWrapper} from 'angular2/src/facade/collection';\nexport class For {\n  constructor(viewContainer) {\n    this.viewContainer = viewContainer;\n  }\n  set iterableChanges(changes) {\n    if (isBlank(changes)) {\n      this.viewContainer.clear();\n      return ;\n    }\n    var recordViewTuples = [];\n    changes.forEachRemovedItem((removedRecord) => ListWrapper.push(recordViewTuples, new RecordViewTuple(removedRecord, null)));\n    changes.forEachMovedItem((movedRecord) => ListWrapper.push(recordViewTuples, new RecordViewTuple(movedRecord, null)));\n    var insertTuples = For.bulkRemove(recordViewTuples, this.viewContainer);\n    changes.forEachAddedItem((addedRecord) => ListWrapper.push(insertTuples, new RecordViewTuple(addedRecord, null)));\n    For.bulkInsert(insertTuples, this.viewContainer);\n    for (var i = 0; i < insertTuples.length; i++) {\n      this.perViewChange(insertTuples[i].view, insertTuples[i].record);\n    }\n  }\n  perViewChange(view, record) {\n    view.setLocal('\\$implicit', record.item);\n    view.setLocal('index', record.currentIndex);\n  }\n  static bulkRemove(tuples, viewContainer) {\n    tuples.sort((a, b) => a.record.previousIndex - b.record.previousIndex);\n    var movedTuples = [];\n    for (var i = tuples.length - 1; i >= 0; i--) {\n      var tuple = tuples[i];\n      if (isPresent(tuple.record.currentIndex)) {\n        tuple.view = viewContainer.detach(tuple.record.previousIndex);\n        ListWrapper.push(movedTuples, tuple);\n      } else {\n        viewContainer.remove(tuple.record.previousIndex);\n      }\n    }\n    return movedTuples;\n  }\n  static bulkInsert(tuples, viewContainer) {\n    tuples.sort((a, b) => a.record.currentIndex - b.record.currentIndex);\n    for (var i = 0; i < tuples.length; i++) {\n      var tuple = tuples[i];\n      if (isPresent(tuple.view)) {\n        viewContainer.insert(tuple.view, tuple.record.currentIndex);\n      } else {\n        tuple.view = viewContainer.create(tuple.record.currentIndex);\n      }\n    }\n    return tuples;\n  }\n}\nObject.defineProperty(For, \"annotations\", {get: function() {\n    return [new Viewport({\n      selector: '[for][of]',\n      bind: {'iterableChanges': 'of | iterableDiff'}\n    })];\n  }});\nObject.defineProperty(For, \"parameters\", {get: function() {\n    return [[ViewContainer]];\n  }});\nclass RecordViewTuple {\n  constructor(record, view) {\n    this.record = record;\n    this.view = view;\n  }\n}\n//# sourceMappingURL=for.js.map\n\n//# sourceMappingURL=./for.map"]}