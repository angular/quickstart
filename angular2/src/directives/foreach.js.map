{"version":3,"sources":["@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/10","src/directives/foreach.js","@traceur/generated/TemplateParser/11","src/directives/@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/14"],"names":[],"mappings":"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","file":"src/directives/foreach.js","sourceRoot":"/home/tonyo/projects/quickstart/node_modules/angular2/es6/prod/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","import {Viewport} from 'angular2/src/core/annotations/annotations';\nimport {ViewContainer} from 'angular2/src/core/compiler/view_container';\nimport {View} from 'angular2/src/core/compiler/view';\nimport {isPresent, isBlank} from 'angular2/src/facade/lang';\nimport {ListWrapper} from 'angular2/src/facade/collection';\n\n@Viewport({\n  selector: '[foreach][in]',\n  bind: {\n    'iterableChanges': 'in | iterableDiff'\n  }\n})\nexport class Foreach  {\n  viewContainer: ViewContainer;\n  constructor(viewContainer:ViewContainer) {\n    super();\n    this.viewContainer = viewContainer;\n  }\n\n  set iterableChanges(changes) {\n    if (isBlank(changes)) {\n      this.viewContainer.clear();\n      return;\n    }\n\n    // TODO(rado): check if change detection can produce a change record that is\n    // easier to consume than current.\n    var recordViewTuples = [];\n    changes.forEachRemovedItem(\n      (removedRecord) => ListWrapper.push(recordViewTuples, new RecordViewTuple(removedRecord, null))\n    );\n\n    changes.forEachMovedItem(\n      (movedRecord) => ListWrapper.push(recordViewTuples, new RecordViewTuple(movedRecord, null))\n    );\n\n    var insertTuples = Foreach.bulkRemove(recordViewTuples, this.viewContainer);\n\n    changes.forEachAddedItem(\n      (addedRecord) => ListWrapper.push(insertTuples, new RecordViewTuple(addedRecord, null))\n    );\n\n    Foreach.bulkInsert(insertTuples, this.viewContainer);\n\n    for (var i = 0; i < insertTuples.length; i++) {\n      this.perViewChange(insertTuples[i].view, insertTuples[i].record);\n    }\n  }\n\n  perViewChange(view, record) {\n    view.setLocal('\\$implicit', record.item);\n    view.setLocal('index', record.currentIndex);\n  }\n\n  static bulkRemove(tuples, viewContainer) {\n    tuples.sort((a, b) => a.record.previousIndex - b.record.previousIndex);\n    var movedTuples = [];\n    for (var i = tuples.length - 1; i >= 0; i--) {\n      var tuple = tuples[i];\n      // separate moved views from removed views.\n      if (isPresent(tuple.record.currentIndex)) {\n        tuple.view = viewContainer.detach(tuple.record.previousIndex);\n        ListWrapper.push(movedTuples, tuple);\n      } else {\n        viewContainer.remove(tuple.record.previousIndex);\n      }\n    }\n    return movedTuples;\n  }\n\n  static bulkInsert(tuples, viewContainer) {\n    tuples.sort((a, b) => a.record.currentIndex - b.record.currentIndex);\n    for (var i = 0; i < tuples.length; i++) {\n      var tuple = tuples[i];\n      if (isPresent(tuple.view)) {\n        viewContainer.insert(tuple.view, tuple.record.currentIndex);\n      } else {\n        tuple.view = viewContainer.create(tuple.record.currentIndex);\n      }\n    }\n    return tuples;\n  }\n}\n\nclass RecordViewTuple {\n  view: View;\n  record: any;\n  constructor(record, view) {\n    this.record = record;\n    this.view = view;\n  }\n}\n","$traceurRuntime.superConstructor($__placeholder__0).call($__placeholder__1)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","$__placeholder__0 = $__placeholder__1"]}